// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mixer.proto

package datacommons

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Option_CacheChoice int32

const (
	Option_DEFAULT Option_CacheChoice = 0
	// Only get data from main cache.
	Option_BASE_CACHE_ONLY Option_CacheChoice = 1
)

var Option_CacheChoice_name = map[int32]string{
	0: "DEFAULT",
	1: "BASE_CACHE_ONLY",
}

var Option_CacheChoice_value = map[string]int32{
	"DEFAULT":         0,
	"BASE_CACHE_ONLY": 1,
}

func (x Option_CacheChoice) String() string {
	return proto.EnumName(Option_CacheChoice_name, int32(x))
}

func (Option_CacheChoice) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{0, 0}
}

type Option struct {
	CacheChoice          Option_CacheChoice `protobuf:"varint,1,opt,name=cache_choice,json=cacheChoice,proto3,enum=datacommons.Option_CacheChoice" json:"cache_choice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{0}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetCacheChoice() Option_CacheChoice {
	if m != nil {
		return m.CacheChoice
	}
	return Option_DEFAULT
}

// A graph query request in Sparql query language.
type QueryRequest struct {
	// Sparql query string.
	Sparql               string   `protobuf:"bytes,1,opt,name=sparql,proto3" json:"sparql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{1}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetSparql() string {
	if m != nil {
		return m.Sparql
	}
	return ""
}

// Cell in the QueryResponse
type QueryResponseCell struct {
	// Cell value.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Provenance ID.
	ProvenanceId         string   `protobuf:"bytes,2,opt,name=provenance_id,json=provenanceId,proto3" json:"provenance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResponseCell) Reset()         { *m = QueryResponseCell{} }
func (m *QueryResponseCell) String() string { return proto.CompactTextString(m) }
func (*QueryResponseCell) ProtoMessage()    {}
func (*QueryResponseCell) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{2}
}

func (m *QueryResponseCell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponseCell.Unmarshal(m, b)
}
func (m *QueryResponseCell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponseCell.Marshal(b, m, deterministic)
}
func (m *QueryResponseCell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponseCell.Merge(m, src)
}
func (m *QueryResponseCell) XXX_Size() int {
	return xxx_messageInfo_QueryResponseCell.Size(m)
}
func (m *QueryResponseCell) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponseCell.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponseCell proto.InternalMessageInfo

func (m *QueryResponseCell) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *QueryResponseCell) GetProvenanceId() string {
	if m != nil {
		return m.ProvenanceId
	}
	return ""
}

// A graph query response row corresponding to the query variables in graph query.
type QueryResponseRow struct {
	// A list of QueryResponseCell.
	Cells                []*QueryResponseCell `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *QueryResponseRow) Reset()         { *m = QueryResponseRow{} }
func (m *QueryResponseRow) String() string { return proto.CompactTextString(m) }
func (*QueryResponseRow) ProtoMessage()    {}
func (*QueryResponseRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{3}
}

func (m *QueryResponseRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponseRow.Unmarshal(m, b)
}
func (m *QueryResponseRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponseRow.Marshal(b, m, deterministic)
}
func (m *QueryResponseRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponseRow.Merge(m, src)
}
func (m *QueryResponseRow) XXX_Size() int {
	return xxx_messageInfo_QueryResponseRow.Size(m)
}
func (m *QueryResponseRow) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponseRow.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponseRow proto.InternalMessageInfo

func (m *QueryResponseRow) GetCells() []*QueryResponseCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

// Graph query response.
type QueryResponse struct {
	// Identifier for selected variable. Size of the header is the same as number
	// of cells for each row.
	Header []string `protobuf:"bytes,1,rep,name=header,proto3" json:"header,omitempty"`
	// Query results, with each row containing cells corresponding to header
	// variable order.
	Rows                 []*QueryResponseRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{4}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetHeader() []string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResponse) GetRows() []*QueryResponseRow {
	if m != nil {
		return m.Rows
	}
	return nil
}

// Request to translate a graph query.
type TranslateRequest struct {
	// String representaion of schema mappings used to translate.
	SchemaMapping string `protobuf:"bytes,1,opt,name=schema_mapping,json=schemaMapping,proto3" json:"schema_mapping,omitempty"`
	// String representation of sparql query.
	Sparql               string   `protobuf:"bytes,2,opt,name=sparql,proto3" json:"sparql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranslateRequest) Reset()         { *m = TranslateRequest{} }
func (m *TranslateRequest) String() string { return proto.CompactTextString(m) }
func (*TranslateRequest) ProtoMessage()    {}
func (*TranslateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{5}
}

func (m *TranslateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranslateRequest.Unmarshal(m, b)
}
func (m *TranslateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranslateRequest.Marshal(b, m, deterministic)
}
func (m *TranslateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranslateRequest.Merge(m, src)
}
func (m *TranslateRequest) XXX_Size() int {
	return xxx_messageInfo_TranslateRequest.Size(m)
}
func (m *TranslateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TranslateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TranslateRequest proto.InternalMessageInfo

func (m *TranslateRequest) GetSchemaMapping() string {
	if m != nil {
		return m.SchemaMapping
	}
	return ""
}

func (m *TranslateRequest) GetSparql() string {
	if m != nil {
		return m.Sparql
	}
	return ""
}

// Response of a translate request.
type TranslateResponse struct {
	// The translated sql.
	Sql string `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	// Serialized json string of the translation result
	Translation          string   `protobuf:"bytes,2,opt,name=translation,proto3" json:"translation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranslateResponse) Reset()         { *m = TranslateResponse{} }
func (m *TranslateResponse) String() string { return proto.CompactTextString(m) }
func (*TranslateResponse) ProtoMessage()    {}
func (*TranslateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{6}
}

func (m *TranslateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranslateResponse.Unmarshal(m, b)
}
func (m *TranslateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranslateResponse.Marshal(b, m, deterministic)
}
func (m *TranslateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranslateResponse.Merge(m, src)
}
func (m *TranslateResponse) XXX_Size() int {
	return xxx_messageInfo_TranslateResponse.Size(m)
}
func (m *TranslateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TranslateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TranslateResponse proto.InternalMessageInfo

func (m *TranslateResponse) GetSql() string {
	if m != nil {
		return m.Sql
	}
	return ""
}

func (m *TranslateResponse) GetTranslation() string {
	if m != nil {
		return m.Translation
	}
	return ""
}

// Request to get property labels.
type GetPropertyLabelsRequest struct {
	// The dcids of nodes.
	Dcids                []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	Option               *Option  `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPropertyLabelsRequest) Reset()         { *m = GetPropertyLabelsRequest{} }
func (m *GetPropertyLabelsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPropertyLabelsRequest) ProtoMessage()    {}
func (*GetPropertyLabelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{7}
}

func (m *GetPropertyLabelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPropertyLabelsRequest.Unmarshal(m, b)
}
func (m *GetPropertyLabelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPropertyLabelsRequest.Marshal(b, m, deterministic)
}
func (m *GetPropertyLabelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPropertyLabelsRequest.Merge(m, src)
}
func (m *GetPropertyLabelsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPropertyLabelsRequest.Size(m)
}
func (m *GetPropertyLabelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPropertyLabelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPropertyLabelsRequest proto.InternalMessageInfo

func (m *GetPropertyLabelsRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetPropertyLabelsRequest) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Response returned by GetPropertyLabels.
type GetPropertyLabelsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPropertyLabelsResponse) Reset()         { *m = GetPropertyLabelsResponse{} }
func (m *GetPropertyLabelsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPropertyLabelsResponse) ProtoMessage()    {}
func (*GetPropertyLabelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{8}
}

func (m *GetPropertyLabelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPropertyLabelsResponse.Unmarshal(m, b)
}
func (m *GetPropertyLabelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPropertyLabelsResponse.Marshal(b, m, deterministic)
}
func (m *GetPropertyLabelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPropertyLabelsResponse.Merge(m, src)
}
func (m *GetPropertyLabelsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPropertyLabelsResponse.Size(m)
}
func (m *GetPropertyLabelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPropertyLabelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPropertyLabelsResponse proto.InternalMessageInfo

func (m *GetPropertyLabelsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get all neighboring nodes along an edge labeled by a property.
type GetPropertyValuesRequest struct {
	// The dcids of nodes to query for.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// The type of the neighboring node to query for.
	ValueType string `protobuf:"bytes,2,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	// The property to get adjacent nodes for.
	Property string `protobuf:"bytes,3,opt,name=property,proto3" json:"property,omitempty"`
	// Maximum number of nodes to query for.
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// Direction, "in" or "out", default to "out".
	Direction            string   `protobuf:"bytes,5,opt,name=direction,proto3" json:"direction,omitempty"`
	Option               *Option  `protobuf:"bytes,6,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPropertyValuesRequest) Reset()         { *m = GetPropertyValuesRequest{} }
func (m *GetPropertyValuesRequest) String() string { return proto.CompactTextString(m) }
func (*GetPropertyValuesRequest) ProtoMessage()    {}
func (*GetPropertyValuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{9}
}

func (m *GetPropertyValuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPropertyValuesRequest.Unmarshal(m, b)
}
func (m *GetPropertyValuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPropertyValuesRequest.Marshal(b, m, deterministic)
}
func (m *GetPropertyValuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPropertyValuesRequest.Merge(m, src)
}
func (m *GetPropertyValuesRequest) XXX_Size() int {
	return xxx_messageInfo_GetPropertyValuesRequest.Size(m)
}
func (m *GetPropertyValuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPropertyValuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPropertyValuesRequest proto.InternalMessageInfo

func (m *GetPropertyValuesRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetPropertyValuesRequest) GetValueType() string {
	if m != nil {
		return m.ValueType
	}
	return ""
}

func (m *GetPropertyValuesRequest) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}

func (m *GetPropertyValuesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetPropertyValuesRequest) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

func (m *GetPropertyValuesRequest) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Response returned by GetPropertyValues.
type GetPropertyValuesResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPropertyValuesResponse) Reset()         { *m = GetPropertyValuesResponse{} }
func (m *GetPropertyValuesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPropertyValuesResponse) ProtoMessage()    {}
func (*GetPropertyValuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{10}
}

func (m *GetPropertyValuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPropertyValuesResponse.Unmarshal(m, b)
}
func (m *GetPropertyValuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPropertyValuesResponse.Marshal(b, m, deterministic)
}
func (m *GetPropertyValuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPropertyValuesResponse.Merge(m, src)
}
func (m *GetPropertyValuesResponse) XXX_Size() int {
	return xxx_messageInfo_GetPropertyValuesResponse.Size(m)
}
func (m *GetPropertyValuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPropertyValuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPropertyValuesResponse proto.InternalMessageInfo

func (m *GetPropertyValuesResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get all triples linking to the given nodes.
type GetTriplesRequest struct {
	// The dcids of the nodes to query for.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// Maximum number of triples for each property and type of the neighbor.
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Option               *Option  `protobuf:"bytes,3,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTriplesRequest) Reset()         { *m = GetTriplesRequest{} }
func (m *GetTriplesRequest) String() string { return proto.CompactTextString(m) }
func (*GetTriplesRequest) ProtoMessage()    {}
func (*GetTriplesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{11}
}

func (m *GetTriplesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTriplesRequest.Unmarshal(m, b)
}
func (m *GetTriplesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTriplesRequest.Marshal(b, m, deterministic)
}
func (m *GetTriplesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTriplesRequest.Merge(m, src)
}
func (m *GetTriplesRequest) XXX_Size() int {
	return xxx_messageInfo_GetTriplesRequest.Size(m)
}
func (m *GetTriplesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTriplesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTriplesRequest proto.InternalMessageInfo

func (m *GetTriplesRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetTriplesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetTriplesRequest) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Response returned by GetTriples.
type GetTriplesResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTriplesResponse) Reset()         { *m = GetTriplesResponse{} }
func (m *GetTriplesResponse) String() string { return proto.CompactTextString(m) }
func (*GetTriplesResponse) ProtoMessage()    {}
func (*GetTriplesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{12}
}

func (m *GetTriplesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTriplesResponse.Unmarshal(m, b)
}
func (m *GetTriplesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTriplesResponse.Marshal(b, m, deterministic)
}
func (m *GetTriplesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTriplesResponse.Merge(m, src)
}
func (m *GetTriplesResponse) XXX_Size() int {
	return xxx_messageInfo_GetTriplesResponse.Size(m)
}
func (m *GetTriplesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTriplesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTriplesResponse proto.InternalMessageInfo

func (m *GetTriplesResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get all population/observation information for a place.
type GetPopObsRequest struct {
	// DCID of a place.
	Dcid                 string   `protobuf:"bytes,1,opt,name=dcid,proto3" json:"dcid,omitempty"`
	Option               *Option  `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPopObsRequest) Reset()         { *m = GetPopObsRequest{} }
func (m *GetPopObsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPopObsRequest) ProtoMessage()    {}
func (*GetPopObsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{13}
}

func (m *GetPopObsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopObsRequest.Unmarshal(m, b)
}
func (m *GetPopObsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopObsRequest.Marshal(b, m, deterministic)
}
func (m *GetPopObsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopObsRequest.Merge(m, src)
}
func (m *GetPopObsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPopObsRequest.Size(m)
}
func (m *GetPopObsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopObsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopObsRequest proto.InternalMessageInfo

func (m *GetPopObsRequest) GetDcid() string {
	if m != nil {
		return m.Dcid
	}
	return ""
}

func (m *GetPopObsRequest) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Response of GetPopObs.
type GetPopObsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPopObsResponse) Reset()         { *m = GetPopObsResponse{} }
func (m *GetPopObsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPopObsResponse) ProtoMessage()    {}
func (*GetPopObsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{14}
}

func (m *GetPopObsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopObsResponse.Unmarshal(m, b)
}
func (m *GetPopObsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopObsResponse.Marshal(b, m, deterministic)
}
func (m *GetPopObsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopObsResponse.Merge(m, src)
}
func (m *GetPopObsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPopObsResponse.Size(m)
}
func (m *GetPopObsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopObsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopObsResponse proto.InternalMessageInfo

func (m *GetPopObsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Represents a property value pair.
type PropertyValue struct {
	// The property schema
	Property string `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	// The value in string.
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropertyValue) Reset()         { *m = PropertyValue{} }
func (m *PropertyValue) String() string { return proto.CompactTextString(m) }
func (*PropertyValue) ProtoMessage()    {}
func (*PropertyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{15}
}

func (m *PropertyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyValue.Unmarshal(m, b)
}
func (m *PropertyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyValue.Marshal(b, m, deterministic)
}
func (m *PropertyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyValue.Merge(m, src)
}
func (m *PropertyValue) XXX_Size() int {
	return xxx_messageInfo_PropertyValue.Size(m)
}
func (m *PropertyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyValue.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyValue proto.InternalMessageInfo

func (m *PropertyValue) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}

func (m *PropertyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Requests to get observation for all place.
type GetPlaceObsRequest struct {
	// The type of the place.
	PlaceType string `protobuf:"bytes,1,opt,name=place_type,json=placeType,proto3" json:"place_type,omitempty"`
	// The type of the Statistical population.
	PopulationType string `protobuf:"bytes,2,opt,name=population_type,json=populationType,proto3" json:"population_type,omitempty"`
	// A list of constraining property values that defines the population.
	Pvs []*PropertyValue `protobuf:"bytes,3,rep,name=pvs,proto3" json:"pvs,omitempty"`
	// Observation date.
	ObservationDate      string   `protobuf:"bytes,4,opt,name=observation_date,json=observationDate,proto3" json:"observation_date,omitempty"`
	Option               *Option  `protobuf:"bytes,5,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlaceObsRequest) Reset()         { *m = GetPlaceObsRequest{} }
func (m *GetPlaceObsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlaceObsRequest) ProtoMessage()    {}
func (*GetPlaceObsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{16}
}

func (m *GetPlaceObsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlaceObsRequest.Unmarshal(m, b)
}
func (m *GetPlaceObsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlaceObsRequest.Marshal(b, m, deterministic)
}
func (m *GetPlaceObsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlaceObsRequest.Merge(m, src)
}
func (m *GetPlaceObsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlaceObsRequest.Size(m)
}
func (m *GetPlaceObsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlaceObsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlaceObsRequest proto.InternalMessageInfo

func (m *GetPlaceObsRequest) GetPlaceType() string {
	if m != nil {
		return m.PlaceType
	}
	return ""
}

func (m *GetPlaceObsRequest) GetPopulationType() string {
	if m != nil {
		return m.PopulationType
	}
	return ""
}

func (m *GetPlaceObsRequest) GetPvs() []*PropertyValue {
	if m != nil {
		return m.Pvs
	}
	return nil
}

func (m *GetPlaceObsRequest) GetObservationDate() string {
	if m != nil {
		return m.ObservationDate
	}
	return ""
}

func (m *GetPlaceObsRequest) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Response of GetPlaceObs.
type GetPlaceObsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlaceObsResponse) Reset()         { *m = GetPlaceObsResponse{} }
func (m *GetPlaceObsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlaceObsResponse) ProtoMessage()    {}
func (*GetPlaceObsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{17}
}

func (m *GetPlaceObsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlaceObsResponse.Unmarshal(m, b)
}
func (m *GetPlaceObsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlaceObsResponse.Marshal(b, m, deterministic)
}
func (m *GetPlaceObsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlaceObsResponse.Merge(m, src)
}
func (m *GetPlaceObsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPlaceObsResponse.Size(m)
}
func (m *GetPlaceObsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlaceObsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlaceObsResponse proto.InternalMessageInfo

func (m *GetPlaceObsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request message for GetObsSeries.
type GetObsSeriesRequest struct {
	// The dcid of the place.
	Place string `protobuf:"bytes,1,opt,name=place,proto3" json:"place,omitempty"`
	// The type of the Statistical population.
	PopulationType string `protobuf:"bytes,2,opt,name=population_type,json=populationType,proto3" json:"population_type,omitempty"`
	// A list of constraining property values that defines the population.
	Pvs                  []*PropertyValue `protobuf:"bytes,3,rep,name=pvs,proto3" json:"pvs,omitempty"`
	Option               *Option          `protobuf:"bytes,4,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetObsSeriesRequest) Reset()         { *m = GetObsSeriesRequest{} }
func (m *GetObsSeriesRequest) String() string { return proto.CompactTextString(m) }
func (*GetObsSeriesRequest) ProtoMessage()    {}
func (*GetObsSeriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{18}
}

func (m *GetObsSeriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObsSeriesRequest.Unmarshal(m, b)
}
func (m *GetObsSeriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObsSeriesRequest.Marshal(b, m, deterministic)
}
func (m *GetObsSeriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObsSeriesRequest.Merge(m, src)
}
func (m *GetObsSeriesRequest) XXX_Size() int {
	return xxx_messageInfo_GetObsSeriesRequest.Size(m)
}
func (m *GetObsSeriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObsSeriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetObsSeriesRequest proto.InternalMessageInfo

func (m *GetObsSeriesRequest) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *GetObsSeriesRequest) GetPopulationType() string {
	if m != nil {
		return m.PopulationType
	}
	return ""
}

func (m *GetObsSeriesRequest) GetPvs() []*PropertyValue {
	if m != nil {
		return m.Pvs
	}
	return nil
}

func (m *GetObsSeriesRequest) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Response of GetObsSeries.
type GetObsSeriesResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObsSeriesResponse) Reset()         { *m = GetObsSeriesResponse{} }
func (m *GetObsSeriesResponse) String() string { return proto.CompactTextString(m) }
func (*GetObsSeriesResponse) ProtoMessage()    {}
func (*GetObsSeriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{19}
}

func (m *GetObsSeriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObsSeriesResponse.Unmarshal(m, b)
}
func (m *GetObsSeriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObsSeriesResponse.Marshal(b, m, deterministic)
}
func (m *GetObsSeriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObsSeriesResponse.Merge(m, src)
}
func (m *GetObsSeriesResponse) XXX_Size() int {
	return xxx_messageInfo_GetObsSeriesResponse.Size(m)
}
func (m *GetObsSeriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObsSeriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetObsSeriesResponse proto.InternalMessageInfo

func (m *GetObsSeriesResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Represents observation time series data.
type ObsTimeSeries struct {
	Val                  map[string]float64            `protobuf:"bytes,1,rep,name=val,proto3" json:"val,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Unit                 string                        `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	PlaceName            string                        `protobuf:"bytes,3,opt,name=place_name,json=placeName,proto3" json:"place_name,omitempty"`
	IsDcAggregate        bool                          `protobuf:"varint,4,opt,name=is_dc_aggregate,json=isDcAggregate,proto3" json:"is_dc_aggregate,omitempty"`
	PlaceDcid            string                        `protobuf:"bytes,5,opt,name=place_dcid,json=placeDcid,proto3" json:"place_dcid,omitempty"`
	SourceSeries         []*ObsTimeSeries_SourceSeries `protobuf:"bytes,6,rep,name=source_series,json=sourceSeries,proto3" json:"source_series,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ObsTimeSeries) Reset()         { *m = ObsTimeSeries{} }
func (m *ObsTimeSeries) String() string { return proto.CompactTextString(m) }
func (*ObsTimeSeries) ProtoMessage()    {}
func (*ObsTimeSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{20}
}

func (m *ObsTimeSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObsTimeSeries.Unmarshal(m, b)
}
func (m *ObsTimeSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObsTimeSeries.Marshal(b, m, deterministic)
}
func (m *ObsTimeSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObsTimeSeries.Merge(m, src)
}
func (m *ObsTimeSeries) XXX_Size() int {
	return xxx_messageInfo_ObsTimeSeries.Size(m)
}
func (m *ObsTimeSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_ObsTimeSeries.DiscardUnknown(m)
}

var xxx_messageInfo_ObsTimeSeries proto.InternalMessageInfo

func (m *ObsTimeSeries) GetVal() map[string]float64 {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *ObsTimeSeries) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *ObsTimeSeries) GetPlaceName() string {
	if m != nil {
		return m.PlaceName
	}
	return ""
}

func (m *ObsTimeSeries) GetIsDcAggregate() bool {
	if m != nil {
		return m.IsDcAggregate
	}
	return false
}

func (m *ObsTimeSeries) GetPlaceDcid() string {
	if m != nil {
		return m.PlaceDcid
	}
	return ""
}

func (m *ObsTimeSeries) GetSourceSeries() []*ObsTimeSeries_SourceSeries {
	if m != nil {
		return m.SourceSeries
	}
	return nil
}

type ObsTimeSeries_SourceSeries struct {
	Val                  map[string]float64 `protobuf:"bytes,1,rep,name=val,proto3" json:"val,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	MeasurementMethod    string             `protobuf:"bytes,3,opt,name=measurement_method,json=measurementMethod,proto3" json:"measurement_method,omitempty"`
	ObservationPeriod    string             `protobuf:"bytes,4,opt,name=observation_period,json=observationPeriod,proto3" json:"observation_period,omitempty"`
	ImportName           string             `protobuf:"bytes,5,opt,name=import_name,json=importName,proto3" json:"import_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ObsTimeSeries_SourceSeries) Reset()         { *m = ObsTimeSeries_SourceSeries{} }
func (m *ObsTimeSeries_SourceSeries) String() string { return proto.CompactTextString(m) }
func (*ObsTimeSeries_SourceSeries) ProtoMessage()    {}
func (*ObsTimeSeries_SourceSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{20, 0}
}

func (m *ObsTimeSeries_SourceSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObsTimeSeries_SourceSeries.Unmarshal(m, b)
}
func (m *ObsTimeSeries_SourceSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObsTimeSeries_SourceSeries.Marshal(b, m, deterministic)
}
func (m *ObsTimeSeries_SourceSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObsTimeSeries_SourceSeries.Merge(m, src)
}
func (m *ObsTimeSeries_SourceSeries) XXX_Size() int {
	return xxx_messageInfo_ObsTimeSeries_SourceSeries.Size(m)
}
func (m *ObsTimeSeries_SourceSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_ObsTimeSeries_SourceSeries.DiscardUnknown(m)
}

var xxx_messageInfo_ObsTimeSeries_SourceSeries proto.InternalMessageInfo

func (m *ObsTimeSeries_SourceSeries) GetVal() map[string]float64 {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *ObsTimeSeries_SourceSeries) GetMeasurementMethod() string {
	if m != nil {
		return m.MeasurementMethod
	}
	return ""
}

func (m *ObsTimeSeries_SourceSeries) GetObservationPeriod() string {
	if m != nil {
		return m.ObservationPeriod
	}
	return ""
}

func (m *ObsTimeSeries_SourceSeries) GetImportName() string {
	if m != nil {
		return m.ImportName
	}
	return ""
}

// Wrapper for observation data.
type ChartStore struct {
	// Types that are valid to be assigned to Val:
	//	*ChartStore_ObsTimeSeries
	Val                  isChartStore_Val `protobuf_oneof:"val"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ChartStore) Reset()         { *m = ChartStore{} }
func (m *ChartStore) String() string { return proto.CompactTextString(m) }
func (*ChartStore) ProtoMessage()    {}
func (*ChartStore) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{21}
}

func (m *ChartStore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartStore.Unmarshal(m, b)
}
func (m *ChartStore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartStore.Marshal(b, m, deterministic)
}
func (m *ChartStore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartStore.Merge(m, src)
}
func (m *ChartStore) XXX_Size() int {
	return xxx_messageInfo_ChartStore.Size(m)
}
func (m *ChartStore) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartStore.DiscardUnknown(m)
}

var xxx_messageInfo_ChartStore proto.InternalMessageInfo

type isChartStore_Val interface {
	isChartStore_Val()
}

type ChartStore_ObsTimeSeries struct {
	ObsTimeSeries *ObsTimeSeries `protobuf:"bytes,1,opt,name=obs_time_series,json=obsTimeSeries,proto3,oneof"`
}

func (*ChartStore_ObsTimeSeries) isChartStore_Val() {}

func (m *ChartStore) GetVal() isChartStore_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *ChartStore) GetObsTimeSeries() *ObsTimeSeries {
	if x, ok := m.GetVal().(*ChartStore_ObsTimeSeries); ok {
		return x.ObsTimeSeries
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ChartStore) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ChartStore_ObsTimeSeries)(nil),
	}
}

// Request message for GetStats.
type GetStatsRequest struct {
	// The dcids of the place.
	Place []string `protobuf:"bytes,1,rep,name=place,proto3" json:"place,omitempty"`
	// The dcid of the StatisticalVariable.
	StatsVar             string   `protobuf:"bytes,2,opt,name=stats_var,json=statsVar,proto3" json:"stats_var,omitempty"`
	Option               *Option  `protobuf:"bytes,3,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatsRequest) Reset()         { *m = GetStatsRequest{} }
func (m *GetStatsRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatsRequest) ProtoMessage()    {}
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{22}
}

func (m *GetStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsRequest.Unmarshal(m, b)
}
func (m *GetStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsRequest.Marshal(b, m, deterministic)
}
func (m *GetStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsRequest.Merge(m, src)
}
func (m *GetStatsRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatsRequest.Size(m)
}
func (m *GetStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsRequest proto.InternalMessageInfo

func (m *GetStatsRequest) GetPlace() []string {
	if m != nil {
		return m.Place
	}
	return nil
}

func (m *GetStatsRequest) GetStatsVar() string {
	if m != nil {
		return m.StatsVar
	}
	return ""
}

func (m *GetStatsRequest) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Response of GetStats
type GetStatsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatsResponse) Reset()         { *m = GetStatsResponse{} }
func (m *GetStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetStatsResponse) ProtoMessage()    {}
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{23}
}

func (m *GetStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsResponse.Unmarshal(m, b)
}
func (m *GetStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsResponse.Merge(m, src)
}
func (m *GetStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetStatsResponse.Size(m)
}
func (m *GetStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsResponse proto.InternalMessageInfo

func (m *GetStatsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request message for GetPopCategory.
type GetPopCategoryRequest struct {
	// The type of the place.
	PlaceType            string   `protobuf:"bytes,1,opt,name=place_type,json=placeType,proto3" json:"place_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPopCategoryRequest) Reset()         { *m = GetPopCategoryRequest{} }
func (m *GetPopCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetPopCategoryRequest) ProtoMessage()    {}
func (*GetPopCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{24}
}

func (m *GetPopCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopCategoryRequest.Unmarshal(m, b)
}
func (m *GetPopCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopCategoryRequest.Marshal(b, m, deterministic)
}
func (m *GetPopCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopCategoryRequest.Merge(m, src)
}
func (m *GetPopCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetPopCategoryRequest.Size(m)
}
func (m *GetPopCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopCategoryRequest proto.InternalMessageInfo

func (m *GetPopCategoryRequest) GetPlaceType() string {
	if m != nil {
		return m.PlaceType
	}
	return ""
}

// Response of GetPopCategory.
type GetPopCategoryResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPopCategoryResponse) Reset()         { *m = GetPopCategoryResponse{} }
func (m *GetPopCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetPopCategoryResponse) ProtoMessage()    {}
func (*GetPopCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{25}
}

func (m *GetPopCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopCategoryResponse.Unmarshal(m, b)
}
func (m *GetPopCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopCategoryResponse.Marshal(b, m, deterministic)
}
func (m *GetPopCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopCategoryResponse.Merge(m, src)
}
func (m *GetPopCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetPopCategoryResponse.Size(m)
}
func (m *GetPopCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopCategoryResponse proto.InternalMessageInfo

func (m *GetPopCategoryResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get certain population for a set of places.
type GetPopulationsRequest struct {
	// DCIDs for a list of places.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// Population type.
	PopulationType string `protobuf:"bytes,2,opt,name=population_type,json=populationType,proto3" json:"population_type,omitempty"`
	// A list of constraining property values that define the population.
	Pvs                  []*PropertyValue `protobuf:"bytes,3,rep,name=pvs,proto3" json:"pvs,omitempty"`
	Option               *Option          `protobuf:"bytes,4,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetPopulationsRequest) Reset()         { *m = GetPopulationsRequest{} }
func (m *GetPopulationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPopulationsRequest) ProtoMessage()    {}
func (*GetPopulationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{26}
}

func (m *GetPopulationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopulationsRequest.Unmarshal(m, b)
}
func (m *GetPopulationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopulationsRequest.Marshal(b, m, deterministic)
}
func (m *GetPopulationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopulationsRequest.Merge(m, src)
}
func (m *GetPopulationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPopulationsRequest.Size(m)
}
func (m *GetPopulationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopulationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopulationsRequest proto.InternalMessageInfo

func (m *GetPopulationsRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetPopulationsRequest) GetPopulationType() string {
	if m != nil {
		return m.PopulationType
	}
	return ""
}

func (m *GetPopulationsRequest) GetPvs() []*PropertyValue {
	if m != nil {
		return m.Pvs
	}
	return nil
}

func (m *GetPopulationsRequest) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Response of GetPopulation.
type GetPopulationsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPopulationsResponse) Reset()         { *m = GetPopulationsResponse{} }
func (m *GetPopulationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPopulationsResponse) ProtoMessage()    {}
func (*GetPopulationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{27}
}

func (m *GetPopulationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopulationsResponse.Unmarshal(m, b)
}
func (m *GetPopulationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopulationsResponse.Marshal(b, m, deterministic)
}
func (m *GetPopulationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopulationsResponse.Merge(m, src)
}
func (m *GetPopulationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPopulationsResponse.Size(m)
}
func (m *GetPopulationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopulationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopulationsResponse proto.InternalMessageInfo

func (m *GetPopulationsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get observation given a list of population and observation properties.
type GetObservationsRequest struct {
	// Population for a list of populations.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// The measured property of the observation.
	MeasuredProperty string `protobuf:"bytes,2,opt,name=measured_property,json=measuredProperty,proto3" json:"measured_property,omitempty"`
	// The observation date.
	ObservationDate string `protobuf:"bytes,3,opt,name=observation_date,json=observationDate,proto3" json:"observation_date,omitempty"`
	// The statistics type, like "measured_value", "median_value", etc...
	// TODO: Change the variable name to 'stat_type' to be consistent.
	StatsType string `protobuf:"bytes,4,opt,name=stats_type,json=statsType,proto3" json:"stats_type,omitempty"`
	// (Optional) Observation period like "P1Y", "P3M" etc...
	ObservationPeriod string `protobuf:"bytes,5,opt,name=observation_period,json=observationPeriod,proto3" json:"observation_period,omitempty"`
	// (Opitonal) Measurement method used to get the observation.
	MeasurementMethod    string   `protobuf:"bytes,6,opt,name=measurement_method,json=measurementMethod,proto3" json:"measurement_method,omitempty"`
	Option               *Option  `protobuf:"bytes,7,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObservationsRequest) Reset()         { *m = GetObservationsRequest{} }
func (m *GetObservationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetObservationsRequest) ProtoMessage()    {}
func (*GetObservationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{28}
}

func (m *GetObservationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObservationsRequest.Unmarshal(m, b)
}
func (m *GetObservationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObservationsRequest.Marshal(b, m, deterministic)
}
func (m *GetObservationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObservationsRequest.Merge(m, src)
}
func (m *GetObservationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetObservationsRequest.Size(m)
}
func (m *GetObservationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObservationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetObservationsRequest proto.InternalMessageInfo

func (m *GetObservationsRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetObservationsRequest) GetMeasuredProperty() string {
	if m != nil {
		return m.MeasuredProperty
	}
	return ""
}

func (m *GetObservationsRequest) GetObservationDate() string {
	if m != nil {
		return m.ObservationDate
	}
	return ""
}

func (m *GetObservationsRequest) GetStatsType() string {
	if m != nil {
		return m.StatsType
	}
	return ""
}

func (m *GetObservationsRequest) GetObservationPeriod() string {
	if m != nil {
		return m.ObservationPeriod
	}
	return ""
}

func (m *GetObservationsRequest) GetMeasurementMethod() string {
	if m != nil {
		return m.MeasurementMethod
	}
	return ""
}

func (m *GetObservationsRequest) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Response of GetObservation request.
type GetObservationsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObservationsResponse) Reset()         { *m = GetObservationsResponse{} }
func (m *GetObservationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetObservationsResponse) ProtoMessage()    {}
func (*GetObservationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{29}
}

func (m *GetObservationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObservationsResponse.Unmarshal(m, b)
}
func (m *GetObservationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObservationsResponse.Marshal(b, m, deterministic)
}
func (m *GetObservationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObservationsResponse.Merge(m, src)
}
func (m *GetObservationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetObservationsResponse.Size(m)
}
func (m *GetObservationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObservationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetObservationsResponse proto.InternalMessageInfo

func (m *GetObservationsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get places that are contained in parent places.
type GetPlacesInRequest struct {
	// The parent place dcids.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// The child place type.
	PlaceType            string   `protobuf:"bytes,2,opt,name=place_type,json=placeType,proto3" json:"place_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlacesInRequest) Reset()         { *m = GetPlacesInRequest{} }
func (m *GetPlacesInRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlacesInRequest) ProtoMessage()    {}
func (*GetPlacesInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{30}
}

func (m *GetPlacesInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlacesInRequest.Unmarshal(m, b)
}
func (m *GetPlacesInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlacesInRequest.Marshal(b, m, deterministic)
}
func (m *GetPlacesInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlacesInRequest.Merge(m, src)
}
func (m *GetPlacesInRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlacesInRequest.Size(m)
}
func (m *GetPlacesInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlacesInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlacesInRequest proto.InternalMessageInfo

func (m *GetPlacesInRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetPlacesInRequest) GetPlaceType() string {
	if m != nil {
		return m.PlaceType
	}
	return ""
}

// Response of GetPlacesIn.
type GetPlacesInResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlacesInResponse) Reset()         { *m = GetPlacesInResponse{} }
func (m *GetPlacesInResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlacesInResponse) ProtoMessage()    {}
func (*GetPlacesInResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{31}
}

func (m *GetPlacesInResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlacesInResponse.Unmarshal(m, b)
}
func (m *GetPlacesInResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlacesInResponse.Marshal(b, m, deterministic)
}
func (m *GetPlacesInResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlacesInResponse.Merge(m, src)
}
func (m *GetPlacesInResponse) XXX_Size() int {
	return xxx_messageInfo_GetPlacesInResponse.Size(m)
}
func (m *GetPlacesInResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlacesInResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlacesInResponse proto.InternalMessageInfo

func (m *GetPlacesInResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get related places of a place for a given statistical variable.
type GetRelatedPlacesRequest struct {
	// Place DCIDs.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// Population type.
	PopulationType string `protobuf:"bytes,2,opt,name=population_type,json=populationType,proto3" json:"population_type,omitempty"`
	// A list of constraining property values that defines the population.
	Pvs []*PropertyValue `protobuf:"bytes,3,rep,name=pvs,proto3" json:"pvs,omitempty"`
	// The measured property of the observation.
	MeasuredProperty string `protobuf:"bytes,4,opt,name=measured_property,json=measuredProperty,proto3" json:"measured_property,omitempty"`
	// (Opitonal) Measurement method.
	MeasurementMethod string `protobuf:"bytes,5,opt,name=measurement_method,json=measurementMethod,proto3" json:"measurement_method,omitempty"`
	// (Opitonal) Measurement denominator.
	MeasurementDenominator string `protobuf:"bytes,6,opt,name=measurement_denominator,json=measurementDenominator,proto3" json:"measurement_denominator,omitempty"`
	// (Opitonal) Measurement qualifier.
	MeasurementQualifier string `protobuf:"bytes,7,opt,name=measurement_qualifier,json=measurementQualifier,proto3" json:"measurement_qualifier,omitempty"`
	// (Opitonal) Scaling factor.
	ScalingFactor string `protobuf:"bytes,8,opt,name=scaling_factor,json=scalingFactor,proto3" json:"scaling_factor,omitempty"`
	// (Optional) Unit.
	Unit string `protobuf:"bytes,9,opt,name=unit,proto3" json:"unit,omitempty"`
	// The statistics type, like "measured", "median", etc...
	StatType string `protobuf:"bytes,10,opt,name=stat_type,json=statType,proto3" json:"stat_type,omitempty"`
	// (Optional) Wheter to require same place type for related places.
	SamePlaceType bool `protobuf:"varint,11,opt,name=same_place_type,json=samePlaceType,proto3" json:"same_place_type,omitempty"`
	// (Optional) Whether to require all related places under the same ancestor.
	WithinPlace string `protobuf:"bytes,12,opt,name=within_place,json=withinPlace,proto3" json:"within_place,omitempty"`
	// (Opitonal) Whether the computation needs to be based on per capita.
	IsPerCapita          bool     `protobuf:"varint,13,opt,name=is_per_capita,json=isPerCapita,proto3" json:"is_per_capita,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRelatedPlacesRequest) Reset()         { *m = GetRelatedPlacesRequest{} }
func (m *GetRelatedPlacesRequest) String() string { return proto.CompactTextString(m) }
func (*GetRelatedPlacesRequest) ProtoMessage()    {}
func (*GetRelatedPlacesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{32}
}

func (m *GetRelatedPlacesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRelatedPlacesRequest.Unmarshal(m, b)
}
func (m *GetRelatedPlacesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRelatedPlacesRequest.Marshal(b, m, deterministic)
}
func (m *GetRelatedPlacesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRelatedPlacesRequest.Merge(m, src)
}
func (m *GetRelatedPlacesRequest) XXX_Size() int {
	return xxx_messageInfo_GetRelatedPlacesRequest.Size(m)
}
func (m *GetRelatedPlacesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRelatedPlacesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRelatedPlacesRequest proto.InternalMessageInfo

func (m *GetRelatedPlacesRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetRelatedPlacesRequest) GetPopulationType() string {
	if m != nil {
		return m.PopulationType
	}
	return ""
}

func (m *GetRelatedPlacesRequest) GetPvs() []*PropertyValue {
	if m != nil {
		return m.Pvs
	}
	return nil
}

func (m *GetRelatedPlacesRequest) GetMeasuredProperty() string {
	if m != nil {
		return m.MeasuredProperty
	}
	return ""
}

func (m *GetRelatedPlacesRequest) GetMeasurementMethod() string {
	if m != nil {
		return m.MeasurementMethod
	}
	return ""
}

func (m *GetRelatedPlacesRequest) GetMeasurementDenominator() string {
	if m != nil {
		return m.MeasurementDenominator
	}
	return ""
}

func (m *GetRelatedPlacesRequest) GetMeasurementQualifier() string {
	if m != nil {
		return m.MeasurementQualifier
	}
	return ""
}

func (m *GetRelatedPlacesRequest) GetScalingFactor() string {
	if m != nil {
		return m.ScalingFactor
	}
	return ""
}

func (m *GetRelatedPlacesRequest) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *GetRelatedPlacesRequest) GetStatType() string {
	if m != nil {
		return m.StatType
	}
	return ""
}

func (m *GetRelatedPlacesRequest) GetSamePlaceType() bool {
	if m != nil {
		return m.SamePlaceType
	}
	return false
}

func (m *GetRelatedPlacesRequest) GetWithinPlace() string {
	if m != nil {
		return m.WithinPlace
	}
	return ""
}

func (m *GetRelatedPlacesRequest) GetIsPerCapita() bool {
	if m != nil {
		return m.IsPerCapita
	}
	return false
}

// Response of GetRelatedPlaces request.
type GetRelatedPlacesResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRelatedPlacesResponse) Reset()         { *m = GetRelatedPlacesResponse{} }
func (m *GetRelatedPlacesResponse) String() string { return proto.CompactTextString(m) }
func (*GetRelatedPlacesResponse) ProtoMessage()    {}
func (*GetRelatedPlacesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{33}
}

func (m *GetRelatedPlacesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRelatedPlacesResponse.Unmarshal(m, b)
}
func (m *GetRelatedPlacesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRelatedPlacesResponse.Marshal(b, m, deterministic)
}
func (m *GetRelatedPlacesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRelatedPlacesResponse.Merge(m, src)
}
func (m *GetRelatedPlacesResponse) XXX_Size() int {
	return xxx_messageInfo_GetRelatedPlacesResponse.Size(m)
}
func (m *GetRelatedPlacesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRelatedPlacesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRelatedPlacesResponse proto.InternalMessageInfo

func (m *GetRelatedPlacesResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get interesting aspects for places.
type GetInterestingPlaceAspectsRequest struct {
	// Place DCIDs.
	Dcids                []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInterestingPlaceAspectsRequest) Reset()         { *m = GetInterestingPlaceAspectsRequest{} }
func (m *GetInterestingPlaceAspectsRequest) String() string { return proto.CompactTextString(m) }
func (*GetInterestingPlaceAspectsRequest) ProtoMessage()    {}
func (*GetInterestingPlaceAspectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{34}
}

func (m *GetInterestingPlaceAspectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInterestingPlaceAspectsRequest.Unmarshal(m, b)
}
func (m *GetInterestingPlaceAspectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInterestingPlaceAspectsRequest.Marshal(b, m, deterministic)
}
func (m *GetInterestingPlaceAspectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInterestingPlaceAspectsRequest.Merge(m, src)
}
func (m *GetInterestingPlaceAspectsRequest) XXX_Size() int {
	return xxx_messageInfo_GetInterestingPlaceAspectsRequest.Size(m)
}
func (m *GetInterestingPlaceAspectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInterestingPlaceAspectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInterestingPlaceAspectsRequest proto.InternalMessageInfo

func (m *GetInterestingPlaceAspectsRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

// Response to get interesting aspects for places.
type GetInterestingPlaceAspectsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInterestingPlaceAspectsResponse) Reset()         { *m = GetInterestingPlaceAspectsResponse{} }
func (m *GetInterestingPlaceAspectsResponse) String() string { return proto.CompactTextString(m) }
func (*GetInterestingPlaceAspectsResponse) ProtoMessage()    {}
func (*GetInterestingPlaceAspectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{35}
}

func (m *GetInterestingPlaceAspectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInterestingPlaceAspectsResponse.Unmarshal(m, b)
}
func (m *GetInterestingPlaceAspectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInterestingPlaceAspectsResponse.Marshal(b, m, deterministic)
}
func (m *GetInterestingPlaceAspectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInterestingPlaceAspectsResponse.Merge(m, src)
}
func (m *GetInterestingPlaceAspectsResponse) XXX_Size() int {
	return xxx_messageInfo_GetInterestingPlaceAspectsResponse.Size(m)
}
func (m *GetInterestingPlaceAspectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInterestingPlaceAspectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInterestingPlaceAspectsResponse proto.InternalMessageInfo

func (m *GetInterestingPlaceAspectsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get chart data.
type GetChartDataRequest struct {
	// Keys.
	Keys                 []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChartDataRequest) Reset()         { *m = GetChartDataRequest{} }
func (m *GetChartDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetChartDataRequest) ProtoMessage()    {}
func (*GetChartDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{36}
}

func (m *GetChartDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChartDataRequest.Unmarshal(m, b)
}
func (m *GetChartDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChartDataRequest.Marshal(b, m, deterministic)
}
func (m *GetChartDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChartDataRequest.Merge(m, src)
}
func (m *GetChartDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetChartDataRequest.Size(m)
}
func (m *GetChartDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChartDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetChartDataRequest proto.InternalMessageInfo

func (m *GetChartDataRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

// Response to get chart data.
type GetChartDataResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChartDataResponse) Reset()         { *m = GetChartDataResponse{} }
func (m *GetChartDataResponse) String() string { return proto.CompactTextString(m) }
func (*GetChartDataResponse) ProtoMessage()    {}
func (*GetChartDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{37}
}

func (m *GetChartDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChartDataResponse.Unmarshal(m, b)
}
func (m *GetChartDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChartDataResponse.Marshal(b, m, deterministic)
}
func (m *GetChartDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChartDataResponse.Merge(m, src)
}
func (m *GetChartDataResponse) XXX_Size() int {
	return xxx_messageInfo_GetChartDataResponse.Size(m)
}
func (m *GetChartDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChartDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetChartDataResponse proto.InternalMessageInfo

func (m *GetChartDataResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Search request sent to the mixer.
type SearchRequest struct {
	// Search query which is just a plain text string, e.g. "california".
	// This is not a datalog query, but a plain text query. The mixer is free
	// to choose an interpretation of the query, e.g. using NLP or just plain
	// keyword search and return relevant entities from the graph.
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Maximum number of entities to return.
	MaxResults           int32    `protobuf:"varint,2,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{38}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchRequest) GetMaxResults() int32 {
	if m != nil {
		return m.MaxResults
	}
	return 0
}

// Search response from mixer.
type SearchResponse struct {
	// Matching entities broken down by type.
	Section              []*SearchResultSection `protobuf:"bytes,1,rep,name=section,proto3" json:"section,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{39}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetSection() []*SearchResultSection {
	if m != nil {
		return m.Section
	}
	return nil
}

// Wrapper for all entities returned from search which belong to a single type.
type SearchResultSection struct {
	// Type of entities in this section.
	TypeName string `protobuf:"bytes,1,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	// List of entities in this section.
	Entity               []*SearchEntityResult `protobuf:"bytes,2,rep,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SearchResultSection) Reset()         { *m = SearchResultSection{} }
func (m *SearchResultSection) String() string { return proto.CompactTextString(m) }
func (*SearchResultSection) ProtoMessage()    {}
func (*SearchResultSection) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{40}
}

func (m *SearchResultSection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResultSection.Unmarshal(m, b)
}
func (m *SearchResultSection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResultSection.Marshal(b, m, deterministic)
}
func (m *SearchResultSection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResultSection.Merge(m, src)
}
func (m *SearchResultSection) XXX_Size() int {
	return xxx_messageInfo_SearchResultSection.Size(m)
}
func (m *SearchResultSection) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResultSection.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResultSection proto.InternalMessageInfo

func (m *SearchResultSection) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *SearchResultSection) GetEntity() []*SearchEntityResult {
	if m != nil {
		return m.Entity
	}
	return nil
}

// Data for a single entity returned by the search endpoint.
type SearchEntityResult struct {
	// DCID of the entity.
	Dcid string `protobuf:"bytes,1,opt,name=dcid,proto3" json:"dcid,omitempty"`
	// Name of the entity.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchEntityResult) Reset()         { *m = SearchEntityResult{} }
func (m *SearchEntityResult) String() string { return proto.CompactTextString(m) }
func (*SearchEntityResult) ProtoMessage()    {}
func (*SearchEntityResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{41}
}

func (m *SearchEntityResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchEntityResult.Unmarshal(m, b)
}
func (m *SearchEntityResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchEntityResult.Marshal(b, m, deterministic)
}
func (m *SearchEntityResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchEntityResult.Merge(m, src)
}
func (m *SearchEntityResult) XXX_Size() int {
	return xxx_messageInfo_SearchEntityResult.Size(m)
}
func (m *SearchEntityResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchEntityResult.DiscardUnknown(m)
}

var xxx_messageInfo_SearchEntityResult proto.InternalMessageInfo

func (m *SearchEntityResult) GetDcid() string {
	if m != nil {
		return m.Dcid
	}
	return ""
}

func (m *SearchEntityResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// PopObsObservation holds information for an observation for the
// Population-Observation knowledge graph..
type PopObsObservation struct {
	Id                     string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                   string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	MeasuredProp           string   `protobuf:"bytes,3,opt,name=measured_prop,json=measuredProp,proto3" json:"measured_prop,omitempty"`
	MinValue               float64  `protobuf:"fixed64,4,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue               float64  `protobuf:"fixed64,5,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	MeanValue              float64  `protobuf:"fixed64,6,opt,name=mean_value,json=meanValue,proto3" json:"mean_value,omitempty"`
	MedianValue            float64  `protobuf:"fixed64,7,opt,name=median_value,json=medianValue,proto3" json:"median_value,omitempty"`
	MeasuredValue          float64  `protobuf:"fixed64,8,opt,name=measured_value,json=measuredValue,proto3" json:"measured_value,omitempty"`
	SampleSize             float64  `protobuf:"fixed64,9,opt,name=sample_size,json=sampleSize,proto3" json:"sample_size,omitempty"`
	MarginOfError          float64  `protobuf:"fixed64,10,opt,name=margin_of_error,json=marginOfError,proto3" json:"margin_of_error,omitempty"`
	StdError               float64  `protobuf:"fixed64,11,opt,name=std_error,json=stdError,proto3" json:"std_error,omitempty"`
	MeanStdError           float64  `protobuf:"fixed64,12,opt,name=mean_std_error,json=meanStdError,proto3" json:"mean_std_error,omitempty"`
	SumValue               float64  `protobuf:"fixed64,13,opt,name=sum_value,json=sumValue,proto3" json:"sum_value,omitempty"`
	Percentile10           float64  `protobuf:"fixed64,14,opt,name=percentile10,proto3" json:"percentile10,omitempty"`
	Percentile25           float64  `protobuf:"fixed64,15,opt,name=percentile25,proto3" json:"percentile25,omitempty"`
	Percentile75           float64  `protobuf:"fixed64,16,opt,name=percentile75,proto3" json:"percentile75,omitempty"`
	Percentile90           float64  `protobuf:"fixed64,17,opt,name=percentile90,proto3" json:"percentile90,omitempty"`
	Unit                   string   `protobuf:"bytes,18,opt,name=unit,proto3" json:"unit,omitempty"`
	MeasurementMethod      string   `protobuf:"bytes,19,opt,name=measurement_method,json=measurementMethod,proto3" json:"measurement_method,omitempty"`
	ProvenanceId           string   `protobuf:"bytes,20,opt,name=provenance_id,json=provenanceId,proto3" json:"provenance_id,omitempty"`
	ObservationDate        string   `protobuf:"bytes,22,opt,name=observation_date,json=observationDate,proto3" json:"observation_date,omitempty"`
	ObservationPeriod      string   `protobuf:"bytes,23,opt,name=observation_period,json=observationPeriod,proto3" json:"observation_period,omitempty"`
	MeasurementResult      string   `protobuf:"bytes,24,opt,name=measurement_result,json=measurementResult,proto3" json:"measurement_result,omitempty"`
	GrowthRate             float64  `protobuf:"fixed64,25,opt,name=growth_rate,json=growthRate,proto3" json:"growth_rate,omitempty"`
	ObservedNode           string   `protobuf:"bytes,26,opt,name=observed_node,json=observedNode,proto3" json:"observed_node,omitempty"`
	ComparisonOperator     string   `protobuf:"bytes,27,opt,name=comparison_operator,json=comparisonOperator,proto3" json:"comparison_operator,omitempty"`
	StdDeviationValue      float64  `protobuf:"fixed64,28,opt,name=std_deviation_value,json=stdDeviationValue,proto3" json:"std_deviation_value,omitempty"`
	MeasurementDenominator string   `protobuf:"bytes,29,opt,name=measurement_denominator,json=measurementDenominator,proto3" json:"measurement_denominator,omitempty"`
	MeasurementQualifier   string   `protobuf:"bytes,30,opt,name=measurement_qualifier,json=measurementQualifier,proto3" json:"measurement_qualifier,omitempty"`
	ScalingFactor          string   `protobuf:"bytes,31,opt,name=scaling_factor,json=scalingFactor,proto3" json:"scaling_factor,omitempty"`
	MeasurementVariable    []string `protobuf:"bytes,32,rep,name=measurement_variable,json=measurementVariable,proto3" json:"measurement_variable,omitempty"`
	StatType               string   `protobuf:"bytes,33,opt,name=stat_type,json=statType,proto3" json:"stat_type,omitempty"`
	StatVarIds             []string `protobuf:"bytes,34,rep,name=stat_var_ids,json=statVarIds,proto3" json:"stat_var_ids,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *PopObsObservation) Reset()         { *m = PopObsObservation{} }
func (m *PopObsObservation) String() string { return proto.CompactTextString(m) }
func (*PopObsObservation) ProtoMessage()    {}
func (*PopObsObservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{42}
}

func (m *PopObsObservation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopObsObservation.Unmarshal(m, b)
}
func (m *PopObsObservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopObsObservation.Marshal(b, m, deterministic)
}
func (m *PopObsObservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopObsObservation.Merge(m, src)
}
func (m *PopObsObservation) XXX_Size() int {
	return xxx_messageInfo_PopObsObservation.Size(m)
}
func (m *PopObsObservation) XXX_DiscardUnknown() {
	xxx_messageInfo_PopObsObservation.DiscardUnknown(m)
}

var xxx_messageInfo_PopObsObservation proto.InternalMessageInfo

func (m *PopObsObservation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PopObsObservation) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PopObsObservation) GetMeasuredProp() string {
	if m != nil {
		return m.MeasuredProp
	}
	return ""
}

func (m *PopObsObservation) GetMinValue() float64 {
	if m != nil {
		return m.MinValue
	}
	return 0
}

func (m *PopObsObservation) GetMaxValue() float64 {
	if m != nil {
		return m.MaxValue
	}
	return 0
}

func (m *PopObsObservation) GetMeanValue() float64 {
	if m != nil {
		return m.MeanValue
	}
	return 0
}

func (m *PopObsObservation) GetMedianValue() float64 {
	if m != nil {
		return m.MedianValue
	}
	return 0
}

func (m *PopObsObservation) GetMeasuredValue() float64 {
	if m != nil {
		return m.MeasuredValue
	}
	return 0
}

func (m *PopObsObservation) GetSampleSize() float64 {
	if m != nil {
		return m.SampleSize
	}
	return 0
}

func (m *PopObsObservation) GetMarginOfError() float64 {
	if m != nil {
		return m.MarginOfError
	}
	return 0
}

func (m *PopObsObservation) GetStdError() float64 {
	if m != nil {
		return m.StdError
	}
	return 0
}

func (m *PopObsObservation) GetMeanStdError() float64 {
	if m != nil {
		return m.MeanStdError
	}
	return 0
}

func (m *PopObsObservation) GetSumValue() float64 {
	if m != nil {
		return m.SumValue
	}
	return 0
}

func (m *PopObsObservation) GetPercentile10() float64 {
	if m != nil {
		return m.Percentile10
	}
	return 0
}

func (m *PopObsObservation) GetPercentile25() float64 {
	if m != nil {
		return m.Percentile25
	}
	return 0
}

func (m *PopObsObservation) GetPercentile75() float64 {
	if m != nil {
		return m.Percentile75
	}
	return 0
}

func (m *PopObsObservation) GetPercentile90() float64 {
	if m != nil {
		return m.Percentile90
	}
	return 0
}

func (m *PopObsObservation) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *PopObsObservation) GetMeasurementMethod() string {
	if m != nil {
		return m.MeasurementMethod
	}
	return ""
}

func (m *PopObsObservation) GetProvenanceId() string {
	if m != nil {
		return m.ProvenanceId
	}
	return ""
}

func (m *PopObsObservation) GetObservationDate() string {
	if m != nil {
		return m.ObservationDate
	}
	return ""
}

func (m *PopObsObservation) GetObservationPeriod() string {
	if m != nil {
		return m.ObservationPeriod
	}
	return ""
}

func (m *PopObsObservation) GetMeasurementResult() string {
	if m != nil {
		return m.MeasurementResult
	}
	return ""
}

func (m *PopObsObservation) GetGrowthRate() float64 {
	if m != nil {
		return m.GrowthRate
	}
	return 0
}

func (m *PopObsObservation) GetObservedNode() string {
	if m != nil {
		return m.ObservedNode
	}
	return ""
}

func (m *PopObsObservation) GetComparisonOperator() string {
	if m != nil {
		return m.ComparisonOperator
	}
	return ""
}

func (m *PopObsObservation) GetStdDeviationValue() float64 {
	if m != nil {
		return m.StdDeviationValue
	}
	return 0
}

func (m *PopObsObservation) GetMeasurementDenominator() string {
	if m != nil {
		return m.MeasurementDenominator
	}
	return ""
}

func (m *PopObsObservation) GetMeasurementQualifier() string {
	if m != nil {
		return m.MeasurementQualifier
	}
	return ""
}

func (m *PopObsObservation) GetScalingFactor() string {
	if m != nil {
		return m.ScalingFactor
	}
	return ""
}

func (m *PopObsObservation) GetMeasurementVariable() []string {
	if m != nil {
		return m.MeasurementVariable
	}
	return nil
}

func (m *PopObsObservation) GetStatType() string {
	if m != nil {
		return m.StatType
	}
	return ""
}

func (m *PopObsObservation) GetStatVarIds() []string {
	if m != nil {
		return m.StatVarIds
	}
	return nil
}

// PopObsPop holds information for a statistical population for the
// Population-Observation knowledge graph.
type PopObsPop struct {
	PopType           string               `protobuf:"bytes,1,opt,name=pop_type,json=popType,proto3" json:"pop_type,omitempty"`
	NumConstraints    int32                `protobuf:"varint,2,opt,name=num_constraints,json=numConstraints,proto3" json:"num_constraints,omitempty"`
	Observations      []*PopObsObservation `protobuf:"bytes,5,rep,name=observations,proto3" json:"observations,omitempty"`
	ProvenanceId      string               `protobuf:"bytes,6,opt,name=provenance_id,json=provenanceId,proto3" json:"provenance_id,omitempty"`
	PropertyValues    map[string]string    `protobuf:"bytes,8,rep,name=property_values,json=propertyValues,proto3" json:"property_values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PlaceId           string               `protobuf:"bytes,9,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
	PopId             string               `protobuf:"bytes,10,opt,name=pop_id,json=popId,proto3" json:"pop_id,omitempty"`
	ChildhoodLocation string               `protobuf:"bytes,11,opt,name=childhood_location,json=childhoodLocation,proto3" json:"childhood_location,omitempty"`
	// Observations whose comparedNode is this population.
	ComparedObservations []*PopObsObservation `protobuf:"bytes,12,rep,name=compared_observations,json=comparedObservations,proto3" json:"compared_observations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PopObsPop) Reset()         { *m = PopObsPop{} }
func (m *PopObsPop) String() string { return proto.CompactTextString(m) }
func (*PopObsPop) ProtoMessage()    {}
func (*PopObsPop) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{43}
}

func (m *PopObsPop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopObsPop.Unmarshal(m, b)
}
func (m *PopObsPop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopObsPop.Marshal(b, m, deterministic)
}
func (m *PopObsPop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopObsPop.Merge(m, src)
}
func (m *PopObsPop) XXX_Size() int {
	return xxx_messageInfo_PopObsPop.Size(m)
}
func (m *PopObsPop) XXX_DiscardUnknown() {
	xxx_messageInfo_PopObsPop.DiscardUnknown(m)
}

var xxx_messageInfo_PopObsPop proto.InternalMessageInfo

func (m *PopObsPop) GetPopType() string {
	if m != nil {
		return m.PopType
	}
	return ""
}

func (m *PopObsPop) GetNumConstraints() int32 {
	if m != nil {
		return m.NumConstraints
	}
	return 0
}

func (m *PopObsPop) GetObservations() []*PopObsObservation {
	if m != nil {
		return m.Observations
	}
	return nil
}

func (m *PopObsPop) GetProvenanceId() string {
	if m != nil {
		return m.ProvenanceId
	}
	return ""
}

func (m *PopObsPop) GetPropertyValues() map[string]string {
	if m != nil {
		return m.PropertyValues
	}
	return nil
}

func (m *PopObsPop) GetPlaceId() string {
	if m != nil {
		return m.PlaceId
	}
	return ""
}

func (m *PopObsPop) GetPopId() string {
	if m != nil {
		return m.PopId
	}
	return ""
}

func (m *PopObsPop) GetChildhoodLocation() string {
	if m != nil {
		return m.ChildhoodLocation
	}
	return ""
}

func (m *PopObsPop) GetComparedObservations() []*PopObsObservation {
	if m != nil {
		return m.ComparedObservations
	}
	return nil
}

// PopObsPlace holds information for a place for the Population-Observation
// knowledge graph.
type PopObsPlace struct {
	Name           string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type           string                `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Populations    map[string]*PopObsPop `protobuf:"bytes,3,rep,name=populations,proto3" json:"populations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Place          string                `protobuf:"bytes,4,opt,name=place,proto3" json:"place,omitempty"`
	Latitude       float64               `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude      float64               `protobuf:"fixed64,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	KmlCoordinates string                `protobuf:"bytes,7,opt,name=kml_coordinates,json=kmlCoordinates,proto3" json:"kml_coordinates,omitempty"`
	// Populations whose childhood location is this place.
	ChildhoodLocationPopulations map[string]*PopObsPop `protobuf:"bytes,8,rep,name=childhood_location_populations,json=childhoodLocationPopulations,proto3" json:"childhood_location_populations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Observations                 []*PopObsObservation  `protobuf:"bytes,9,rep,name=observations,proto3" json:"observations,omitempty"`
	Mid                          string                `protobuf:"bytes,10,opt,name=mid,proto3" json:"mid,omitempty"`
	ContainedInPlaces            []string              `protobuf:"bytes,11,rep,name=contained_in_places,json=containedInPlaces,proto3" json:"contained_in_places,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}              `json:"-"`
	XXX_unrecognized             []byte                `json:"-"`
	XXX_sizecache                int32                 `json:"-"`
}

func (m *PopObsPlace) Reset()         { *m = PopObsPlace{} }
func (m *PopObsPlace) String() string { return proto.CompactTextString(m) }
func (*PopObsPlace) ProtoMessage()    {}
func (*PopObsPlace) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{44}
}

func (m *PopObsPlace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopObsPlace.Unmarshal(m, b)
}
func (m *PopObsPlace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopObsPlace.Marshal(b, m, deterministic)
}
func (m *PopObsPlace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopObsPlace.Merge(m, src)
}
func (m *PopObsPlace) XXX_Size() int {
	return xxx_messageInfo_PopObsPlace.Size(m)
}
func (m *PopObsPlace) XXX_DiscardUnknown() {
	xxx_messageInfo_PopObsPlace.DiscardUnknown(m)
}

var xxx_messageInfo_PopObsPlace proto.InternalMessageInfo

func (m *PopObsPlace) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PopObsPlace) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PopObsPlace) GetPopulations() map[string]*PopObsPop {
	if m != nil {
		return m.Populations
	}
	return nil
}

func (m *PopObsPlace) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *PopObsPlace) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *PopObsPlace) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *PopObsPlace) GetKmlCoordinates() string {
	if m != nil {
		return m.KmlCoordinates
	}
	return ""
}

func (m *PopObsPlace) GetChildhoodLocationPopulations() map[string]*PopObsPop {
	if m != nil {
		return m.ChildhoodLocationPopulations
	}
	return nil
}

func (m *PopObsPlace) GetObservations() []*PopObsObservation {
	if m != nil {
		return m.Observations
	}
	return nil
}

func (m *PopObsPlace) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *PopObsPlace) GetContainedInPlaces() []string {
	if m != nil {
		return m.ContainedInPlaces
	}
	return nil
}

// PopObsCollection holds information for multiple PopObsPlace instances.
type PopObsCollection struct {
	Places               []*PopObsPlace `protobuf:"bytes,1,rep,name=places,proto3" json:"places,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PopObsCollection) Reset()         { *m = PopObsCollection{} }
func (m *PopObsCollection) String() string { return proto.CompactTextString(m) }
func (*PopObsCollection) ProtoMessage()    {}
func (*PopObsCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{45}
}

func (m *PopObsCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopObsCollection.Unmarshal(m, b)
}
func (m *PopObsCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopObsCollection.Marshal(b, m, deterministic)
}
func (m *PopObsCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopObsCollection.Merge(m, src)
}
func (m *PopObsCollection) XXX_Size() int {
	return xxx_messageInfo_PopObsCollection.Size(m)
}
func (m *PopObsCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_PopObsCollection.DiscardUnknown(m)
}

var xxx_messageInfo_PopObsCollection proto.InternalMessageInfo

func (m *PopObsCollection) GetPlaces() []*PopObsPlace {
	if m != nil {
		return m.Places
	}
	return nil
}

// Basic info for an entity (subject or object).
type EntityInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Types                []string `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	Dcid                 string   `protobuf:"bytes,3,opt,name=dcid,proto3" json:"dcid,omitempty"`
	ProvenanceId         string   `protobuf:"bytes,4,opt,name=provenance_id,json=provenanceId,proto3" json:"provenance_id,omitempty"`
	Value                string   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityInfo) Reset()         { *m = EntityInfo{} }
func (m *EntityInfo) String() string { return proto.CompactTextString(m) }
func (*EntityInfo) ProtoMessage()    {}
func (*EntityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{46}
}

func (m *EntityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityInfo.Unmarshal(m, b)
}
func (m *EntityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityInfo.Marshal(b, m, deterministic)
}
func (m *EntityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityInfo.Merge(m, src)
}
func (m *EntityInfo) XXX_Size() int {
	return xxx_messageInfo_EntityInfo.Size(m)
}
func (m *EntityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EntityInfo proto.InternalMessageInfo

func (m *EntityInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EntityInfo) GetTypes() []string {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *EntityInfo) GetDcid() string {
	if m != nil {
		return m.Dcid
	}
	return ""
}

func (m *EntityInfo) GetProvenanceId() string {
	if m != nil {
		return m.ProvenanceId
	}
	return ""
}

func (m *EntityInfo) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Basic info for a collection of entities.
type EntityInfoCollection struct {
	Entities             []*EntityInfo `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	TotalCount           int64         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EntityInfoCollection) Reset()         { *m = EntityInfoCollection{} }
func (m *EntityInfoCollection) String() string { return proto.CompactTextString(m) }
func (*EntityInfoCollection) ProtoMessage()    {}
func (*EntityInfoCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{47}
}

func (m *EntityInfoCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityInfoCollection.Unmarshal(m, b)
}
func (m *EntityInfoCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityInfoCollection.Marshal(b, m, deterministic)
}
func (m *EntityInfoCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityInfoCollection.Merge(m, src)
}
func (m *EntityInfoCollection) XXX_Size() int {
	return xxx_messageInfo_EntityInfoCollection.Size(m)
}
func (m *EntityInfoCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityInfoCollection.DiscardUnknown(m)
}

var xxx_messageInfo_EntityInfoCollection proto.InternalMessageInfo

func (m *EntityInfoCollection) GetEntities() []*EntityInfo {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *EntityInfoCollection) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

// A pair of entities linked by containedInPlace.
type ContainedInPlaceRelation struct {
	ParentId             string   `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	ParentType           string   `protobuf:"bytes,2,opt,name=parent_type,json=parentType,proto3" json:"parent_type,omitempty"`
	ChildId              string   `protobuf:"bytes,3,opt,name=child_id,json=childId,proto3" json:"child_id,omitempty"`
	ChildType            string   `protobuf:"bytes,4,opt,name=child_type,json=childType,proto3" json:"child_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainedInPlaceRelation) Reset()         { *m = ContainedInPlaceRelation{} }
func (m *ContainedInPlaceRelation) String() string { return proto.CompactTextString(m) }
func (*ContainedInPlaceRelation) ProtoMessage()    {}
func (*ContainedInPlaceRelation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{48}
}

func (m *ContainedInPlaceRelation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainedInPlaceRelation.Unmarshal(m, b)
}
func (m *ContainedInPlaceRelation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainedInPlaceRelation.Marshal(b, m, deterministic)
}
func (m *ContainedInPlaceRelation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainedInPlaceRelation.Merge(m, src)
}
func (m *ContainedInPlaceRelation) XXX_Size() int {
	return xxx_messageInfo_ContainedInPlaceRelation.Size(m)
}
func (m *ContainedInPlaceRelation) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainedInPlaceRelation.DiscardUnknown(m)
}

var xxx_messageInfo_ContainedInPlaceRelation proto.InternalMessageInfo

func (m *ContainedInPlaceRelation) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *ContainedInPlaceRelation) GetParentType() string {
	if m != nil {
		return m.ParentType
	}
	return ""
}

func (m *ContainedInPlaceRelation) GetChildId() string {
	if m != nil {
		return m.ChildId
	}
	return ""
}

func (m *ContainedInPlaceRelation) GetChildType() string {
	if m != nil {
		return m.ChildType
	}
	return ""
}

// Triple.
type Triple struct {
	SubjectId            string   `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Predicate            string   `protobuf:"bytes,2,opt,name=predicate,proto3" json:"predicate,omitempty"`
	ObjectId             string   `protobuf:"bytes,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ObjectName           string   `protobuf:"bytes,4,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	ObjectValue          string   `protobuf:"bytes,5,opt,name=object_value,json=objectValue,proto3" json:"object_value,omitempty"`
	ProvenanceId         string   `protobuf:"bytes,6,opt,name=provenance_id,json=provenanceId,proto3" json:"provenance_id,omitempty"`
	SubjectName          string   `protobuf:"bytes,7,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	SubjectTypes         []string `protobuf:"bytes,8,rep,name=subject_types,json=subjectTypes,proto3" json:"subject_types,omitempty"`
	ObjectTypes          []string `protobuf:"bytes,10,rep,name=object_types,json=objectTypes,proto3" json:"object_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Triple) Reset()         { *m = Triple{} }
func (m *Triple) String() string { return proto.CompactTextString(m) }
func (*Triple) ProtoMessage()    {}
func (*Triple) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{49}
}

func (m *Triple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triple.Unmarshal(m, b)
}
func (m *Triple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triple.Marshal(b, m, deterministic)
}
func (m *Triple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triple.Merge(m, src)
}
func (m *Triple) XXX_Size() int {
	return xxx_messageInfo_Triple.Size(m)
}
func (m *Triple) XXX_DiscardUnknown() {
	xxx_messageInfo_Triple.DiscardUnknown(m)
}

var xxx_messageInfo_Triple proto.InternalMessageInfo

func (m *Triple) GetSubjectId() string {
	if m != nil {
		return m.SubjectId
	}
	return ""
}

func (m *Triple) GetPredicate() string {
	if m != nil {
		return m.Predicate
	}
	return ""
}

func (m *Triple) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *Triple) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

func (m *Triple) GetObjectValue() string {
	if m != nil {
		return m.ObjectValue
	}
	return ""
}

func (m *Triple) GetProvenanceId() string {
	if m != nil {
		return m.ProvenanceId
	}
	return ""
}

func (m *Triple) GetSubjectName() string {
	if m != nil {
		return m.SubjectName
	}
	return ""
}

func (m *Triple) GetSubjectTypes() []string {
	if m != nil {
		return m.SubjectTypes
	}
	return nil
}

func (m *Triple) GetObjectTypes() []string {
	if m != nil {
		return m.ObjectTypes
	}
	return nil
}

// A collection of triples.
type Triples struct {
	Triples              []*Triple `protobuf:"bytes,1,rep,name=triples,proto3" json:"triples,omitempty"`
	TotalCount           int64     `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Triples) Reset()         { *m = Triples{} }
func (m *Triples) String() string { return proto.CompactTextString(m) }
func (*Triples) ProtoMessage()    {}
func (*Triples) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{50}
}

func (m *Triples) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Triples.Unmarshal(m, b)
}
func (m *Triples) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Triples.Marshal(b, m, deterministic)
}
func (m *Triples) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Triples.Merge(m, src)
}
func (m *Triples) XXX_Size() int {
	return xxx_messageInfo_Triples.Size(m)
}
func (m *Triples) XXX_DiscardUnknown() {
	xxx_messageInfo_Triples.DiscardUnknown(m)
}

var xxx_messageInfo_Triples proto.InternalMessageInfo

func (m *Triples) GetTriples() []*Triple {
	if m != nil {
		return m.Triples
	}
	return nil
}

func (m *Triples) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

// Essential provenance information.
type ProvenanceInfo struct {
	ProvenanceId string `protobuf:"bytes,1,opt,name=provenance_id,json=provenanceId,proto3" json:"provenance_id,omitempty"`
	// Domain is obtained from the source of the provenance.
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	ImportName           string   `protobuf:"bytes,3,opt,name=import_name,json=importName,proto3" json:"import_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProvenanceInfo) Reset()         { *m = ProvenanceInfo{} }
func (m *ProvenanceInfo) String() string { return proto.CompactTextString(m) }
func (*ProvenanceInfo) ProtoMessage()    {}
func (*ProvenanceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{51}
}

func (m *ProvenanceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvenanceInfo.Unmarshal(m, b)
}
func (m *ProvenanceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvenanceInfo.Marshal(b, m, deterministic)
}
func (m *ProvenanceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvenanceInfo.Merge(m, src)
}
func (m *ProvenanceInfo) XXX_Size() int {
	return xxx_messageInfo_ProvenanceInfo.Size(m)
}
func (m *ProvenanceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvenanceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProvenanceInfo proto.InternalMessageInfo

func (m *ProvenanceInfo) GetProvenanceId() string {
	if m != nil {
		return m.ProvenanceId
	}
	return ""
}

func (m *ProvenanceInfo) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *ProvenanceInfo) GetImportName() string {
	if m != nil {
		return m.ImportName
	}
	return ""
}

// A full list of provenances.
type Provenances struct {
	Provenances          []*ProvenanceInfo `protobuf:"bytes,1,rep,name=provenances,proto3" json:"provenances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Provenances) Reset()         { *m = Provenances{} }
func (m *Provenances) String() string { return proto.CompactTextString(m) }
func (*Provenances) ProtoMessage()    {}
func (*Provenances) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{52}
}

func (m *Provenances) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provenances.Unmarshal(m, b)
}
func (m *Provenances) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provenances.Marshal(b, m, deterministic)
}
func (m *Provenances) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provenances.Merge(m, src)
}
func (m *Provenances) XXX_Size() int {
	return xxx_messageInfo_Provenances.Size(m)
}
func (m *Provenances) XXX_DiscardUnknown() {
	xxx_messageInfo_Provenances.DiscardUnknown(m)
}

var xxx_messageInfo_Provenances proto.InternalMessageInfo

func (m *Provenances) GetProvenances() []*ProvenanceInfo {
	if m != nil {
		return m.Provenances
	}
	return nil
}

// Full lists of in and out labels for a given node ID.
type PropertyLabels struct {
	InLabels             []string `protobuf:"bytes,1,rep,name=in_labels,json=inLabels,proto3" json:"in_labels,omitempty"`
	OutLabels            []string `protobuf:"bytes,2,rep,name=out_labels,json=outLabels,proto3" json:"out_labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropertyLabels) Reset()         { *m = PropertyLabels{} }
func (m *PropertyLabels) String() string { return proto.CompactTextString(m) }
func (*PropertyLabels) ProtoMessage()    {}
func (*PropertyLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{53}
}

func (m *PropertyLabels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyLabels.Unmarshal(m, b)
}
func (m *PropertyLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyLabels.Marshal(b, m, deterministic)
}
func (m *PropertyLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyLabels.Merge(m, src)
}
func (m *PropertyLabels) XXX_Size() int {
	return xxx_messageInfo_PropertyLabels.Size(m)
}
func (m *PropertyLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyLabels.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyLabels proto.InternalMessageInfo

func (m *PropertyLabels) GetInLabels() []string {
	if m != nil {
		return m.InLabels
	}
	return nil
}

func (m *PropertyLabels) GetOutLabels() []string {
	if m != nil {
		return m.OutLabels
	}
	return nil
}

// For a given place type, a map from pop type to possible measured properties
// and PVs.
type PopCategory struct {
	// Key is population type.
	Categories           map[string]*PopCategory_PopTypeCategory `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *PopCategory) Reset()         { *m = PopCategory{} }
func (m *PopCategory) String() string { return proto.CompactTextString(m) }
func (*PopCategory) ProtoMessage()    {}
func (*PopCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{54}
}

func (m *PopCategory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopCategory.Unmarshal(m, b)
}
func (m *PopCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopCategory.Marshal(b, m, deterministic)
}
func (m *PopCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopCategory.Merge(m, src)
}
func (m *PopCategory) XXX_Size() int {
	return xxx_messageInfo_PopCategory.Size(m)
}
func (m *PopCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_PopCategory.DiscardUnknown(m)
}

var xxx_messageInfo_PopCategory proto.InternalMessageInfo

func (m *PopCategory) GetCategories() map[string]*PopCategory_PopTypeCategory {
	if m != nil {
		return m.Categories
	}
	return nil
}

// Only used as Flume key. This should be safe to be a key as all workers use
// the same binary which should serialize the proto message in the same way.
type PopCategory_Item struct {
	PlaceType            string   `protobuf:"bytes,1,opt,name=place_type,json=placeType,proto3" json:"place_type,omitempty"`
	PopType              string   `protobuf:"bytes,2,opt,name=pop_type,json=popType,proto3" json:"pop_type,omitempty"`
	MeasuredProp         string   `protobuf:"bytes,3,opt,name=measured_prop,json=measuredProp,proto3" json:"measured_prop,omitempty"`
	StatType             string   `protobuf:"bytes,4,opt,name=stat_type,json=statType,proto3" json:"stat_type,omitempty"`
	Properties           []string `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
	Values               []string `protobuf:"bytes,6,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PopCategory_Item) Reset()         { *m = PopCategory_Item{} }
func (m *PopCategory_Item) String() string { return proto.CompactTextString(m) }
func (*PopCategory_Item) ProtoMessage()    {}
func (*PopCategory_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{54, 0}
}

func (m *PopCategory_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopCategory_Item.Unmarshal(m, b)
}
func (m *PopCategory_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopCategory_Item.Marshal(b, m, deterministic)
}
func (m *PopCategory_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopCategory_Item.Merge(m, src)
}
func (m *PopCategory_Item) XXX_Size() int {
	return xxx_messageInfo_PopCategory_Item.Size(m)
}
func (m *PopCategory_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_PopCategory_Item.DiscardUnknown(m)
}

var xxx_messageInfo_PopCategory_Item proto.InternalMessageInfo

func (m *PopCategory_Item) GetPlaceType() string {
	if m != nil {
		return m.PlaceType
	}
	return ""
}

func (m *PopCategory_Item) GetPopType() string {
	if m != nil {
		return m.PopType
	}
	return ""
}

func (m *PopCategory_Item) GetMeasuredProp() string {
	if m != nil {
		return m.MeasuredProp
	}
	return ""
}

func (m *PopCategory_Item) GetStatType() string {
	if m != nil {
		return m.StatType
	}
	return ""
}

func (m *PopCategory_Item) GetProperties() []string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *PopCategory_Item) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type PopCategory_MeasuredObsPropPVs struct {
	Pvs map[string]string `protobuf:"bytes,1,rep,name=pvs,proto3" json:"pvs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// A list of measured properties and stat types (e.g., age^median) with the
	// same PVs and population type.
	Props                []string `protobuf:"bytes,2,rep,name=props,proto3" json:"props,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PopCategory_MeasuredObsPropPVs) Reset()         { *m = PopCategory_MeasuredObsPropPVs{} }
func (m *PopCategory_MeasuredObsPropPVs) String() string { return proto.CompactTextString(m) }
func (*PopCategory_MeasuredObsPropPVs) ProtoMessage()    {}
func (*PopCategory_MeasuredObsPropPVs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{54, 1}
}

func (m *PopCategory_MeasuredObsPropPVs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopCategory_MeasuredObsPropPVs.Unmarshal(m, b)
}
func (m *PopCategory_MeasuredObsPropPVs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopCategory_MeasuredObsPropPVs.Marshal(b, m, deterministic)
}
func (m *PopCategory_MeasuredObsPropPVs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopCategory_MeasuredObsPropPVs.Merge(m, src)
}
func (m *PopCategory_MeasuredObsPropPVs) XXX_Size() int {
	return xxx_messageInfo_PopCategory_MeasuredObsPropPVs.Size(m)
}
func (m *PopCategory_MeasuredObsPropPVs) XXX_DiscardUnknown() {
	xxx_messageInfo_PopCategory_MeasuredObsPropPVs.DiscardUnknown(m)
}

var xxx_messageInfo_PopCategory_MeasuredObsPropPVs proto.InternalMessageInfo

func (m *PopCategory_MeasuredObsPropPVs) GetPvs() map[string]string {
	if m != nil {
		return m.Pvs
	}
	return nil
}

func (m *PopCategory_MeasuredObsPropPVs) GetProps() []string {
	if m != nil {
		return m.Props
	}
	return nil
}

type PopCategory_PopTypeCategory struct {
	PropPvs              []*PopCategory_MeasuredObsPropPVs `protobuf:"bytes,1,rep,name=prop_pvs,json=propPvs,proto3" json:"prop_pvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *PopCategory_PopTypeCategory) Reset()         { *m = PopCategory_PopTypeCategory{} }
func (m *PopCategory_PopTypeCategory) String() string { return proto.CompactTextString(m) }
func (*PopCategory_PopTypeCategory) ProtoMessage()    {}
func (*PopCategory_PopTypeCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{54, 2}
}

func (m *PopCategory_PopTypeCategory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopCategory_PopTypeCategory.Unmarshal(m, b)
}
func (m *PopCategory_PopTypeCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopCategory_PopTypeCategory.Marshal(b, m, deterministic)
}
func (m *PopCategory_PopTypeCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopCategory_PopTypeCategory.Merge(m, src)
}
func (m *PopCategory_PopTypeCategory) XXX_Size() int {
	return xxx_messageInfo_PopCategory_PopTypeCategory.Size(m)
}
func (m *PopCategory_PopTypeCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_PopCategory_PopTypeCategory.DiscardUnknown(m)
}

var xxx_messageInfo_PopCategory_PopTypeCategory proto.InternalMessageInfo

func (m *PopCategory_PopTypeCategory) GetPropPvs() []*PopCategory_MeasuredObsPropPVs {
	if m != nil {
		return m.PropPvs
	}
	return nil
}

// Related places info for a given place and condition.
type RelatedPlacesInfo struct {
	// The following 3 fields are set only when place is not empty.
	RelatedPlaces  []string `protobuf:"bytes,1,rep,name=related_places,json=relatedPlaces,proto3" json:"related_places,omitempty"`
	RankFromTop    int32    `protobuf:"varint,2,opt,name=rank_from_top,json=rankFromTop,proto3" json:"rank_from_top,omitempty"`
	RankFromBottom int32    `protobuf:"varint,3,opt,name=rank_from_bottom,json=rankFromBottom,proto3" json:"rank_from_bottom,omitempty"`
	// The following 3 fields are set only when place is empty.
	AllPlaces            []string `protobuf:"bytes,4,rep,name=all_places,json=allPlaces,proto3" json:"all_places,omitempty"`
	Top_1000Places       []string `protobuf:"bytes,5,rep,name=top_1000_places,json=top1000Places,proto3" json:"top_1000_places,omitempty"`
	Bottom_1000Places    []string `protobuf:"bytes,6,rep,name=bottom_1000_places,json=bottom1000Places,proto3" json:"bottom_1000_places,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelatedPlacesInfo) Reset()         { *m = RelatedPlacesInfo{} }
func (m *RelatedPlacesInfo) String() string { return proto.CompactTextString(m) }
func (*RelatedPlacesInfo) ProtoMessage()    {}
func (*RelatedPlacesInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{55}
}

func (m *RelatedPlacesInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelatedPlacesInfo.Unmarshal(m, b)
}
func (m *RelatedPlacesInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelatedPlacesInfo.Marshal(b, m, deterministic)
}
func (m *RelatedPlacesInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelatedPlacesInfo.Merge(m, src)
}
func (m *RelatedPlacesInfo) XXX_Size() int {
	return xxx_messageInfo_RelatedPlacesInfo.Size(m)
}
func (m *RelatedPlacesInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RelatedPlacesInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RelatedPlacesInfo proto.InternalMessageInfo

func (m *RelatedPlacesInfo) GetRelatedPlaces() []string {
	if m != nil {
		return m.RelatedPlaces
	}
	return nil
}

func (m *RelatedPlacesInfo) GetRankFromTop() int32 {
	if m != nil {
		return m.RankFromTop
	}
	return 0
}

func (m *RelatedPlacesInfo) GetRankFromBottom() int32 {
	if m != nil {
		return m.RankFromBottom
	}
	return 0
}

func (m *RelatedPlacesInfo) GetAllPlaces() []string {
	if m != nil {
		return m.AllPlaces
	}
	return nil
}

func (m *RelatedPlacesInfo) GetTop_1000Places() []string {
	if m != nil {
		return m.Top_1000Places
	}
	return nil
}

func (m *RelatedPlacesInfo) GetBottom_1000Places() []string {
	if m != nil {
		return m.Bottom_1000Places
	}
	return nil
}

// A statistical variable contains key info of population and observation.
type StatisticalVariable struct {
	PopType                string            `protobuf:"bytes,1,opt,name=pop_type,json=popType,proto3" json:"pop_type,omitempty"`
	Pvs                    map[string]string `protobuf:"bytes,2,rep,name=pvs,proto3" json:"pvs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MeasuredProp           string            `protobuf:"bytes,3,opt,name=measured_prop,json=measuredProp,proto3" json:"measured_prop,omitempty"`
	MeasurementMethod      string            `protobuf:"bytes,4,opt,name=measurement_method,json=measurementMethod,proto3" json:"measurement_method,omitempty"`
	MeasurementDenominator string            `protobuf:"bytes,5,opt,name=measurement_denominator,json=measurementDenominator,proto3" json:"measurement_denominator,omitempty"`
	MeasurementQualifier   string            `protobuf:"bytes,6,opt,name=measurement_qualifier,json=measurementQualifier,proto3" json:"measurement_qualifier,omitempty"`
	ScalingFactor          string            `protobuf:"bytes,7,opt,name=scaling_factor,json=scalingFactor,proto3" json:"scaling_factor,omitempty"`
	Unit                   string            `protobuf:"bytes,8,opt,name=unit,proto3" json:"unit,omitempty"`
	StatType               string            `protobuf:"bytes,9,opt,name=stat_type,json=statType,proto3" json:"stat_type,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}          `json:"-"`
	XXX_unrecognized       []byte            `json:"-"`
	XXX_sizecache          int32             `json:"-"`
}

func (m *StatisticalVariable) Reset()         { *m = StatisticalVariable{} }
func (m *StatisticalVariable) String() string { return proto.CompactTextString(m) }
func (*StatisticalVariable) ProtoMessage()    {}
func (*StatisticalVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{56}
}

func (m *StatisticalVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatisticalVariable.Unmarshal(m, b)
}
func (m *StatisticalVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatisticalVariable.Marshal(b, m, deterministic)
}
func (m *StatisticalVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticalVariable.Merge(m, src)
}
func (m *StatisticalVariable) XXX_Size() int {
	return xxx_messageInfo_StatisticalVariable.Size(m)
}
func (m *StatisticalVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticalVariable.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticalVariable proto.InternalMessageInfo

func (m *StatisticalVariable) GetPopType() string {
	if m != nil {
		return m.PopType
	}
	return ""
}

func (m *StatisticalVariable) GetPvs() map[string]string {
	if m != nil {
		return m.Pvs
	}
	return nil
}

func (m *StatisticalVariable) GetMeasuredProp() string {
	if m != nil {
		return m.MeasuredProp
	}
	return ""
}

func (m *StatisticalVariable) GetMeasurementMethod() string {
	if m != nil {
		return m.MeasurementMethod
	}
	return ""
}

func (m *StatisticalVariable) GetMeasurementDenominator() string {
	if m != nil {
		return m.MeasurementDenominator
	}
	return ""
}

func (m *StatisticalVariable) GetMeasurementQualifier() string {
	if m != nil {
		return m.MeasurementQualifier
	}
	return ""
}

func (m *StatisticalVariable) GetScalingFactor() string {
	if m != nil {
		return m.ScalingFactor
	}
	return ""
}

func (m *StatisticalVariable) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *StatisticalVariable) GetStatType() string {
	if m != nil {
		return m.StatType
	}
	return ""
}

// Info about why a place is interesting: For the statistical variable, under
// certain constraints (place type, ancestor, per capita or not), if a place
// ranks among top or bottom, it is considered as interesting.
type InterestingPlaceAspect struct {
	Aspects              []*InterestingPlaceAspect_Aspect `protobuf:"bytes,1,rep,name=aspects,proto3" json:"aspects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *InterestingPlaceAspect) Reset()         { *m = InterestingPlaceAspect{} }
func (m *InterestingPlaceAspect) String() string { return proto.CompactTextString(m) }
func (*InterestingPlaceAspect) ProtoMessage()    {}
func (*InterestingPlaceAspect) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{57}
}

func (m *InterestingPlaceAspect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterestingPlaceAspect.Unmarshal(m, b)
}
func (m *InterestingPlaceAspect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterestingPlaceAspect.Marshal(b, m, deterministic)
}
func (m *InterestingPlaceAspect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterestingPlaceAspect.Merge(m, src)
}
func (m *InterestingPlaceAspect) XXX_Size() int {
	return xxx_messageInfo_InterestingPlaceAspect.Size(m)
}
func (m *InterestingPlaceAspect) XXX_DiscardUnknown() {
	xxx_messageInfo_InterestingPlaceAspect.DiscardUnknown(m)
}

var xxx_messageInfo_InterestingPlaceAspect proto.InternalMessageInfo

func (m *InterestingPlaceAspect) GetAspects() []*InterestingPlaceAspect_Aspect {
	if m != nil {
		return m.Aspects
	}
	return nil
}

type InterestingPlaceAspect_Aspect struct {
	RankFromTop          int32                `protobuf:"varint,1,opt,name=rank_from_top,json=rankFromTop,proto3" json:"rank_from_top,omitempty"`
	RankFromBottom       int32                `protobuf:"varint,2,opt,name=rank_from_bottom,json=rankFromBottom,proto3" json:"rank_from_bottom,omitempty"`
	StatVar              *StatisticalVariable `protobuf:"bytes,3,opt,name=stat_var,json=statVar,proto3" json:"stat_var,omitempty"`
	ContainedInPlace     string               `protobuf:"bytes,4,opt,name=contained_in_place,json=containedInPlace,proto3" json:"contained_in_place,omitempty"`
	PlaceType            string               `protobuf:"bytes,5,opt,name=place_type,json=placeType,proto3" json:"place_type,omitempty"`
	PerCapita            bool                 `protobuf:"varint,6,opt,name=per_capita,json=perCapita,proto3" json:"per_capita,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InterestingPlaceAspect_Aspect) Reset()         { *m = InterestingPlaceAspect_Aspect{} }
func (m *InterestingPlaceAspect_Aspect) String() string { return proto.CompactTextString(m) }
func (*InterestingPlaceAspect_Aspect) ProtoMessage()    {}
func (*InterestingPlaceAspect_Aspect) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{57, 0}
}

func (m *InterestingPlaceAspect_Aspect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterestingPlaceAspect_Aspect.Unmarshal(m, b)
}
func (m *InterestingPlaceAspect_Aspect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterestingPlaceAspect_Aspect.Marshal(b, m, deterministic)
}
func (m *InterestingPlaceAspect_Aspect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterestingPlaceAspect_Aspect.Merge(m, src)
}
func (m *InterestingPlaceAspect_Aspect) XXX_Size() int {
	return xxx_messageInfo_InterestingPlaceAspect_Aspect.Size(m)
}
func (m *InterestingPlaceAspect_Aspect) XXX_DiscardUnknown() {
	xxx_messageInfo_InterestingPlaceAspect_Aspect.DiscardUnknown(m)
}

var xxx_messageInfo_InterestingPlaceAspect_Aspect proto.InternalMessageInfo

func (m *InterestingPlaceAspect_Aspect) GetRankFromTop() int32 {
	if m != nil {
		return m.RankFromTop
	}
	return 0
}

func (m *InterestingPlaceAspect_Aspect) GetRankFromBottom() int32 {
	if m != nil {
		return m.RankFromBottom
	}
	return 0
}

func (m *InterestingPlaceAspect_Aspect) GetStatVar() *StatisticalVariable {
	if m != nil {
		return m.StatVar
	}
	return nil
}

func (m *InterestingPlaceAspect_Aspect) GetContainedInPlace() string {
	if m != nil {
		return m.ContainedInPlace
	}
	return ""
}

func (m *InterestingPlaceAspect_Aspect) GetPlaceType() string {
	if m != nil {
		return m.PlaceType
	}
	return ""
}

func (m *InterestingPlaceAspect_Aspect) GetPerCapita() bool {
	if m != nil {
		return m.PerCapita
	}
	return false
}

func init() {
	proto.RegisterEnum("datacommons.Option_CacheChoice", Option_CacheChoice_name, Option_CacheChoice_value)
	proto.RegisterType((*Option)(nil), "datacommons.Option")
	proto.RegisterType((*QueryRequest)(nil), "datacommons.QueryRequest")
	proto.RegisterType((*QueryResponseCell)(nil), "datacommons.QueryResponseCell")
	proto.RegisterType((*QueryResponseRow)(nil), "datacommons.QueryResponseRow")
	proto.RegisterType((*QueryResponse)(nil), "datacommons.QueryResponse")
	proto.RegisterType((*TranslateRequest)(nil), "datacommons.TranslateRequest")
	proto.RegisterType((*TranslateResponse)(nil), "datacommons.TranslateResponse")
	proto.RegisterType((*GetPropertyLabelsRequest)(nil), "datacommons.GetPropertyLabelsRequest")
	proto.RegisterType((*GetPropertyLabelsResponse)(nil), "datacommons.GetPropertyLabelsResponse")
	proto.RegisterType((*GetPropertyValuesRequest)(nil), "datacommons.GetPropertyValuesRequest")
	proto.RegisterType((*GetPropertyValuesResponse)(nil), "datacommons.GetPropertyValuesResponse")
	proto.RegisterType((*GetTriplesRequest)(nil), "datacommons.GetTriplesRequest")
	proto.RegisterType((*GetTriplesResponse)(nil), "datacommons.GetTriplesResponse")
	proto.RegisterType((*GetPopObsRequest)(nil), "datacommons.GetPopObsRequest")
	proto.RegisterType((*GetPopObsResponse)(nil), "datacommons.GetPopObsResponse")
	proto.RegisterType((*PropertyValue)(nil), "datacommons.PropertyValue")
	proto.RegisterType((*GetPlaceObsRequest)(nil), "datacommons.GetPlaceObsRequest")
	proto.RegisterType((*GetPlaceObsResponse)(nil), "datacommons.GetPlaceObsResponse")
	proto.RegisterType((*GetObsSeriesRequest)(nil), "datacommons.GetObsSeriesRequest")
	proto.RegisterType((*GetObsSeriesResponse)(nil), "datacommons.GetObsSeriesResponse")
	proto.RegisterType((*ObsTimeSeries)(nil), "datacommons.ObsTimeSeries")
	proto.RegisterMapType((map[string]float64)(nil), "datacommons.ObsTimeSeries.ValEntry")
	proto.RegisterType((*ObsTimeSeries_SourceSeries)(nil), "datacommons.ObsTimeSeries.SourceSeries")
	proto.RegisterMapType((map[string]float64)(nil), "datacommons.ObsTimeSeries.SourceSeries.ValEntry")
	proto.RegisterType((*ChartStore)(nil), "datacommons.ChartStore")
	proto.RegisterType((*GetStatsRequest)(nil), "datacommons.GetStatsRequest")
	proto.RegisterType((*GetStatsResponse)(nil), "datacommons.GetStatsResponse")
	proto.RegisterType((*GetPopCategoryRequest)(nil), "datacommons.GetPopCategoryRequest")
	proto.RegisterType((*GetPopCategoryResponse)(nil), "datacommons.GetPopCategoryResponse")
	proto.RegisterType((*GetPopulationsRequest)(nil), "datacommons.GetPopulationsRequest")
	proto.RegisterType((*GetPopulationsResponse)(nil), "datacommons.GetPopulationsResponse")
	proto.RegisterType((*GetObservationsRequest)(nil), "datacommons.GetObservationsRequest")
	proto.RegisterType((*GetObservationsResponse)(nil), "datacommons.GetObservationsResponse")
	proto.RegisterType((*GetPlacesInRequest)(nil), "datacommons.GetPlacesInRequest")
	proto.RegisterType((*GetPlacesInResponse)(nil), "datacommons.GetPlacesInResponse")
	proto.RegisterType((*GetRelatedPlacesRequest)(nil), "datacommons.GetRelatedPlacesRequest")
	proto.RegisterType((*GetRelatedPlacesResponse)(nil), "datacommons.GetRelatedPlacesResponse")
	proto.RegisterType((*GetInterestingPlaceAspectsRequest)(nil), "datacommons.GetInterestingPlaceAspectsRequest")
	proto.RegisterType((*GetInterestingPlaceAspectsResponse)(nil), "datacommons.GetInterestingPlaceAspectsResponse")
	proto.RegisterType((*GetChartDataRequest)(nil), "datacommons.GetChartDataRequest")
	proto.RegisterType((*GetChartDataResponse)(nil), "datacommons.GetChartDataResponse")
	proto.RegisterType((*SearchRequest)(nil), "datacommons.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "datacommons.SearchResponse")
	proto.RegisterType((*SearchResultSection)(nil), "datacommons.SearchResultSection")
	proto.RegisterType((*SearchEntityResult)(nil), "datacommons.SearchEntityResult")
	proto.RegisterType((*PopObsObservation)(nil), "datacommons.PopObsObservation")
	proto.RegisterType((*PopObsPop)(nil), "datacommons.PopObsPop")
	proto.RegisterMapType((map[string]string)(nil), "datacommons.PopObsPop.PropertyValuesEntry")
	proto.RegisterType((*PopObsPlace)(nil), "datacommons.PopObsPlace")
	proto.RegisterMapType((map[string]*PopObsPop)(nil), "datacommons.PopObsPlace.ChildhoodLocationPopulationsEntry")
	proto.RegisterMapType((map[string]*PopObsPop)(nil), "datacommons.PopObsPlace.PopulationsEntry")
	proto.RegisterType((*PopObsCollection)(nil), "datacommons.PopObsCollection")
	proto.RegisterType((*EntityInfo)(nil), "datacommons.EntityInfo")
	proto.RegisterType((*EntityInfoCollection)(nil), "datacommons.EntityInfoCollection")
	proto.RegisterType((*ContainedInPlaceRelation)(nil), "datacommons.ContainedInPlaceRelation")
	proto.RegisterType((*Triple)(nil), "datacommons.Triple")
	proto.RegisterType((*Triples)(nil), "datacommons.Triples")
	proto.RegisterType((*ProvenanceInfo)(nil), "datacommons.ProvenanceInfo")
	proto.RegisterType((*Provenances)(nil), "datacommons.Provenances")
	proto.RegisterType((*PropertyLabels)(nil), "datacommons.PropertyLabels")
	proto.RegisterType((*PopCategory)(nil), "datacommons.PopCategory")
	proto.RegisterMapType((map[string]*PopCategory_PopTypeCategory)(nil), "datacommons.PopCategory.CategoriesEntry")
	proto.RegisterType((*PopCategory_Item)(nil), "datacommons.PopCategory.Item")
	proto.RegisterType((*PopCategory_MeasuredObsPropPVs)(nil), "datacommons.PopCategory.MeasuredObsPropPVs")
	proto.RegisterMapType((map[string]string)(nil), "datacommons.PopCategory.MeasuredObsPropPVs.PvsEntry")
	proto.RegisterType((*PopCategory_PopTypeCategory)(nil), "datacommons.PopCategory.PopTypeCategory")
	proto.RegisterType((*RelatedPlacesInfo)(nil), "datacommons.RelatedPlacesInfo")
	proto.RegisterType((*StatisticalVariable)(nil), "datacommons.StatisticalVariable")
	proto.RegisterMapType((map[string]string)(nil), "datacommons.StatisticalVariable.PvsEntry")
	proto.RegisterType((*InterestingPlaceAspect)(nil), "datacommons.InterestingPlaceAspect")
	proto.RegisterType((*InterestingPlaceAspect_Aspect)(nil), "datacommons.InterestingPlaceAspect.Aspect")
}

func init() { proto.RegisterFile("mixer.proto", fileDescriptor_b26934ec017ec8df) }

var fileDescriptor_b26934ec017ec8df = []byte{
	// 3698 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x3b, 0x4d, 0x6f, 0xdc, 0x48,
	0x76, 0xdb, 0xdf, 0xdd, 0xaf, 0xbb, 0xa5, 0x56, 0x49, 0x96, 0xdb, 0xb4, 0x65, 0x49, 0xf4, 0xda,
	0xe3, 0xd9, 0x1d, 0x7d, 0x8c, 0x67, 0x3c, 0x93, 0x99, 0x4d, 0x16, 0xb0, 0x25, 0xdb, 0xa3, 0x89,
	0xc7, 0xd2, 0x50, 0x5e, 0x03, 0x13, 0x20, 0x20, 0x28, 0xb2, 0x2c, 0x31, 0x26, 0x59, 0x34, 0xc9,
	0x96, 0xed, 0x0d, 0x02, 0x6c, 0x02, 0x2c, 0x90, 0x5b, 0x80, 0xe4, 0x90, 0xfc, 0x82, 0x1c, 0x72,
	0x49, 0x72, 0xc9, 0x21, 0x97, 0x9c, 0x72, 0xcb, 0x2d, 0x97, 0x5c, 0x02, 0x04, 0x83, 0xfc, 0x8d,
	0x20, 0x41, 0xbd, 0x2a, 0x92, 0x45, 0x36, 0x5b, 0x6d, 0x3b, 0x13, 0x64, 0x4f, 0x6a, 0xbe, 0xf7,
	0xaa, 0xde, 0x47, 0xbd, 0xaf, 0xfa, 0x10, 0xf4, 0x7d, 0xf7, 0x35, 0x8d, 0xb6, 0xc3, 0x88, 0x25,
	0x8c, 0xf4, 0x1d, 0x2b, 0xb1, 0x6c, 0xe6, 0xfb, 0x2c, 0x88, 0xb5, 0x6b, 0xa7, 0x8c, 0x9d, 0x7a,
	0x74, 0xc7, 0x0a, 0xdd, 0x1d, 0x2b, 0x08, 0x58, 0x62, 0x25, 0x2e, 0x0b, 0x62, 0x41, 0xaa, 0xff,
	0x11, 0xb4, 0x0f, 0x43, 0x0e, 0x20, 0xf7, 0x61, 0x60, 0x5b, 0xf6, 0x19, 0x35, 0xed, 0x33, 0xe6,
	0xda, 0x74, 0x5c, 0xdb, 0xa8, 0xdd, 0x5e, 0xb8, 0xb3, 0xbe, 0xad, 0xcc, 0xb5, 0x2d, 0x48, 0xb7,
	0xf7, 0x38, 0xdd, 0x1e, 0x92, 0x19, 0x7d, 0x3b, 0xff, 0xd0, 0x77, 0xa0, 0xaf, 0xe0, 0x48, 0x1f,
	0x3a, 0xfb, 0x0f, 0x1e, 0xde, 0xfb, 0xc5, 0xe3, 0xa7, 0xa3, 0x1f, 0x91, 0x65, 0x58, 0xbc, 0x7f,
	0xef, 0xf8, 0x81, 0xb9, 0x77, 0x6f, 0xef, 0xab, 0x07, 0xe6, 0xe1, 0x93, 0xc7, 0xdf, 0x8d, 0x6a,
	0xfa, 0x2d, 0x18, 0x7c, 0x3b, 0xa1, 0xd1, 0x1b, 0x83, 0xbe, 0x9c, 0xd0, 0x38, 0x21, 0xab, 0xd0,
	0x8e, 0x43, 0x2b, 0x7a, 0xe9, 0x21, 0xfb, 0x9e, 0x21, 0xbf, 0xf4, 0x27, 0xb0, 0x24, 0xe9, 0xe2,
	0x90, 0x05, 0x31, 0xdd, 0xa3, 0x9e, 0x47, 0x56, 0xa0, 0x75, 0x6e, 0x79, 0x13, 0x2a, 0x69, 0xc5,
	0x07, 0xb9, 0x01, 0xc3, 0x30, 0x62, 0xe7, 0x34, 0xb0, 0x02, 0x9b, 0x9a, 0xae, 0x33, 0xae, 0x23,
	0x76, 0x90, 0x03, 0x0f, 0x1c, 0xfd, 0x2b, 0x18, 0x15, 0xe6, 0x33, 0xd8, 0x2b, 0xf2, 0x29, 0xb4,
	0x6c, 0xea, 0x79, 0xf1, 0xb8, 0xb6, 0xd1, 0xb8, 0xdd, 0xbf, 0x73, 0xbd, 0xa0, 0xf9, 0x14, 0x77,
	0x43, 0x10, 0xeb, 0xbf, 0x07, 0xc3, 0x02, 0x8e, 0xab, 0x70, 0x46, 0x2d, 0x87, 0x46, 0x38, 0x4f,
	0xcf, 0x90, 0x5f, 0xe4, 0x63, 0x68, 0x46, 0xec, 0x55, 0x3c, 0xae, 0xe3, 0xec, 0x6b, 0xb3, 0x67,
	0x37, 0xd8, 0x2b, 0x03, 0x49, 0xf5, 0x6f, 0x61, 0xf4, 0x34, 0xb2, 0x82, 0xd8, 0xb3, 0x12, 0x9a,
	0x5a, 0xe8, 0x26, 0x2c, 0xc4, 0xf6, 0x19, 0xf5, 0x2d, 0xd3, 0xb7, 0xc2, 0xd0, 0x0d, 0x4e, 0xa5,
	0xf6, 0x43, 0x01, 0xfd, 0x46, 0x00, 0x15, 0x43, 0xd6, 0x0b, 0x86, 0x7c, 0x04, 0x4b, 0xca, 0x94,
	0x52, 0xe4, 0x11, 0x34, 0xe2, 0xcc, 0xe4, 0xfc, 0x27, 0xd9, 0x80, 0x7e, 0x22, 0xc9, 0x5c, 0x16,
	0xc8, 0x39, 0x54, 0x90, 0xfe, 0xfb, 0x30, 0x7e, 0x44, 0x93, 0xa3, 0x88, 0x85, 0x34, 0x4a, 0xde,
	0x3c, 0xb6, 0x4e, 0xa8, 0x17, 0xa7, 0x32, 0xae, 0x40, 0xcb, 0xb1, 0x5d, 0x27, 0x96, 0x16, 0x10,
	0x1f, 0xe4, 0xa7, 0xd0, 0x66, 0x61, 0x36, 0x5d, 0xff, 0xce, 0x72, 0x85, 0x6b, 0x19, 0x92, 0x44,
	0xbf, 0x0b, 0x57, 0x2a, 0xa6, 0x97, 0xf2, 0x8e, 0xa1, 0x13, 0x5a, 0x6f, 0x3c, 0x66, 0x39, 0x52,
	0xe6, 0xf4, 0x53, 0xff, 0x97, 0x5a, 0x41, 0xac, 0x67, 0xdc, 0x23, 0xe6, 0x88, 0xb5, 0x06, 0x80,
	0x8e, 0x63, 0x26, 0x6f, 0x42, 0x2a, 0x35, 0xed, 0x21, 0xe4, 0xe9, 0x9b, 0x90, 0x12, 0x0d, 0xba,
	0xa1, 0x9c, 0x6d, 0xdc, 0x40, 0x64, 0xf6, 0xcd, 0x27, 0xf4, 0x5c, 0xdf, 0x4d, 0xc6, 0xcd, 0x8d,
	0xda, 0xed, 0x96, 0x21, 0x3e, 0xc8, 0x35, 0xe8, 0x39, 0x6e, 0x44, 0x6d, 0x54, 0xb5, 0x25, 0xe6,
	0xcb, 0x00, 0x8a, 0x15, 0xda, 0xef, 0x6a, 0x85, 0x54, 0x9b, 0xb9, 0x56, 0xf0, 0x60, 0xe9, 0x11,
	0x4d, 0x9e, 0x46, 0x6e, 0xe8, 0xcd, 0xd3, 0x3e, 0x53, 0xa1, 0xae, 0xaa, 0x90, 0x0b, 0xd9, 0x98,
	0x2f, 0xe4, 0x36, 0x10, 0x95, 0xdb, 0x5c, 0xe9, 0x8e, 0x61, 0xc4, 0x95, 0x62, 0xe1, 0xe1, 0x49,
	0x26, 0x1c, 0x81, 0x26, 0x97, 0x47, 0x92, 0xe2, 0xef, 0x77, 0xf3, 0x97, 0x2d, 0x54, 0x39, 0x9d,
	0x74, 0xae, 0x0c, 0xf7, 0x60, 0x58, 0xb0, 0x6a, 0x61, 0x99, 0x6b, 0xd3, 0xcb, 0x2c, 0xf2, 0x4c,
	0x5d, 0xc9, 0x33, 0xfa, 0xf7, 0x35, 0xd4, 0xfb, 0xc8, 0xb3, 0x6c, 0xaa, 0x68, 0xb2, 0x06, 0x10,
	0x72, 0x90, 0x70, 0x27, 0x31, 0x55, 0x0f, 0x21, 0xe8, 0x4e, 0x1f, 0xc0, 0x62, 0xc8, 0xc2, 0x89,
	0x08, 0x22, 0xd5, 0xe5, 0x16, 0x72, 0x30, 0x12, 0x7e, 0x04, 0x8d, 0xf0, 0x3c, 0x1e, 0x37, 0x30,
	0x5b, 0x68, 0x05, 0xd5, 0x0b, 0x92, 0x1b, 0x9c, 0x8c, 0x7c, 0x08, 0x23, 0x76, 0x12, 0xd3, 0xe8,
	0x5c, 0xcc, 0xeb, 0x58, 0x09, 0x45, 0xa7, 0xec, 0x19, 0x8b, 0x0a, 0x7c, 0xdf, 0x4a, 0xa8, 0x62,
	0xd6, 0xd6, 0x7c, 0xb3, 0xee, 0xc0, 0x72, 0x41, 0xc7, 0xb9, 0x86, 0xfd, 0xdb, 0x1a, 0x8e, 0x38,
	0x3c, 0x89, 0x8f, 0x69, 0xe4, 0x16, 0xbc, 0x0f, 0x8d, 0x90, 0xe6, 0x6a, 0xfc, 0xf8, 0xbf, 0xb2,
	0x46, 0xae, 0x62, 0x73, 0xbe, 0x8a, 0xbb, 0xb0, 0x52, 0x14, 0x78, 0xae, 0x8e, 0xff, 0xd6, 0x84,
	0xe1, 0xe1, 0x49, 0xfc, 0xd4, 0xf5, 0xa9, 0x18, 0x43, 0xee, 0x42, 0xe3, 0xdc, 0xf2, 0x64, 0xe1,
	0xb8, 0x51, 0xe4, 0xa6, 0x12, 0x6e, 0x3f, 0xb3, 0xbc, 0x07, 0x41, 0x12, 0xbd, 0x31, 0x38, 0x3d,
	0xf7, 0xfa, 0x49, 0x20, 0x63, 0xaf, 0x67, 0xe0, 0xef, 0xdc, 0x7f, 0x02, 0xcb, 0xa7, 0x32, 0xe3,
	0x08, 0xff, 0x79, 0x62, 0xf9, 0x94, 0xdc, 0x82, 0x45, 0x37, 0x36, 0x1d, 0xdb, 0xb4, 0x4e, 0x4f,
	0x23, 0x7a, 0x9a, 0xae, 0x73, 0xd7, 0x18, 0xba, 0xf1, 0xbe, 0x7d, 0x2f, 0x05, 0xe6, 0xd3, 0x60,
	0x58, 0xb5, 0x94, 0x69, 0xf6, 0x79, 0x6c, 0x3d, 0x86, 0x61, 0xcc, 0x26, 0x91, 0x4d, 0xcd, 0x18,
	0x05, 0x1b, 0xb7, 0x51, 0xf4, 0x0f, 0x2e, 0x10, 0xfd, 0x18, 0xe9, 0xa5, 0x91, 0x06, 0xb1, 0xf2,
	0xa5, 0xfd, 0x59, 0x1d, 0x06, 0x2a, 0x9a, 0xdc, 0x57, 0xed, 0xb1, 0xfb, 0x96, 0x93, 0x96, 0x8c,
	0xb3, 0x05, 0xc4, 0xa7, 0x56, 0x3c, 0x89, 0xa8, 0x4f, 0x83, 0xc4, 0xf4, 0x69, 0x72, 0xc6, 0x1c,
	0x69, 0x90, 0x25, 0x05, 0xf3, 0x0d, 0x22, 0x38, 0xb9, 0x1a, 0x01, 0x21, 0x8d, 0x5c, 0xe6, 0xc8,
	0x18, 0x58, 0x52, 0x30, 0x47, 0x88, 0x20, 0xeb, 0xd0, 0x77, 0xfd, 0x90, 0x45, 0x89, 0xb0, 0xb3,
	0x30, 0x10, 0x08, 0x10, 0x37, 0xb4, 0xf6, 0x19, 0x74, 0x53, 0x79, 0x78, 0x7d, 0x7c, 0x41, 0xd3,
	0xbc, 0xc0, 0x7f, 0x16, 0x53, 0x42, 0x4d, 0xa6, 0x84, 0x2f, 0xeb, 0xbf, 0x55, 0xfb, 0xba, 0xd9,
	0xad, 0x8f, 0x1a, 0xef, 0x3b, 0x5a, 0xff, 0x0e, 0x60, 0xef, 0xcc, 0x8a, 0x92, 0xe3, 0x84, 0x45,
	0x94, 0xec, 0x03, 0x8f, 0x5e, 0x33, 0x71, 0xfd, 0x6c, 0x9d, 0x6a, 0xe8, 0xd0, 0xda, 0x6c, 0x93,
	0x7e, 0xf5, 0x23, 0x63, 0xc8, 0x54, 0xc0, 0xfd, 0x16, 0x2e, 0x86, 0xfe, 0x12, 0x16, 0x1f, 0xd1,
	0xe4, 0x38, 0xb1, 0x92, 0xaa, 0xa0, 0x6c, 0xe4, 0x41, 0x79, 0x15, 0x7a, 0x31, 0xa7, 0x32, 0xcf,
	0xad, 0x48, 0xba, 0x66, 0x17, 0x01, 0xcf, 0xac, 0xe8, 0xdd, 0x2a, 0xc3, 0x47, 0x98, 0xe9, 0x25,
	0xcb, 0xe9, 0xb0, 0xaa, 0x17, 0xc3, 0xea, 0x33, 0xb8, 0x24, 0x52, 0xf8, 0x9e, 0x95, 0xd0, 0x53,
	0x96, 0x37, 0x85, 0x17, 0xa7, 0x54, 0xfd, 0x0e, 0xac, 0x96, 0xc7, 0xcd, 0x0d, 0xe1, 0xbf, 0xaf,
	0xa5, 0xcc, 0x64, 0x96, 0x99, 0x53, 0x26, 0x7f, 0x13, 0x12, 0x55, 0xa6, 0x67, 0x2e, 0xf2, 0x5c,
	0x3d, 0xff, 0xae, 0x8e, 0x83, 0x0e, 0x73, 0xff, 0x9f, 0xdb, 0xa4, 0xa5, 0xb1, 0xe5, 0x98, 0x59,
	0x41, 0x14, 0xaa, 0x8e, 0x52, 0x44, 0xaa, 0x48, 0x65, 0xd5, 0x69, 0x54, 0x57, 0x9d, 0x35, 0x00,
	0xe1, 0x54, 0x68, 0x3b, 0x11, 0x96, 0xc2, 0xcd, 0xd0, 0x6c, 0xd5, 0xd1, 0xdb, 0x9a, 0x15, 0xbd,
	0xd5, 0xb9, 0xa1, 0x3d, 0x2b, 0x37, 0xe4, 0x66, 0xee, 0xcc, 0x37, 0xf3, 0x27, 0x70, 0x79, 0xca,
	0x62, 0x73, 0xed, 0x7c, 0x90, 0xf7, 0x02, 0xf1, 0x41, 0x30, 0xb7, 0xe1, 0x54, 0xdc, 0xb9, 0x5e,
	0x76, 0x67, 0xa5, 0xe4, 0xe2, 0x54, 0x73, 0x79, 0xff, 0x65, 0x13, 0x25, 0x36, 0x28, 0xef, 0xe9,
	0x1d, 0x31, 0xf0, 0xff, 0xc9, 0x9b, 0x2b, 0x7c, 0xa7, 0x39, 0xc3, 0x77, 0xaa, 0x97, 0xb0, 0x35,
	0x6b, 0x09, 0x3f, 0x87, 0xcb, 0x2a, 0xb9, 0x43, 0x03, 0xe6, 0xbb, 0x81, 0x95, 0xb0, 0x48, 0x2e,
	0xfb, 0xaa, 0x82, 0xde, 0xcf, 0xb1, 0xe4, 0x13, 0xb8, 0xa4, 0x0e, 0x7c, 0x39, 0xb1, 0x3c, 0xf7,
	0xb9, 0x4b, 0x23, 0x74, 0x85, 0x9e, 0xb1, 0xa2, 0x20, 0xbf, 0x4d, 0x71, 0x62, 0x93, 0x65, 0x79,
	0x6e, 0x70, 0x6a, 0x3e, 0xb7, 0x6c, 0xce, 0xa4, 0x9b, 0x6e, 0xb2, 0x10, 0xfa, 0x10, 0x81, 0x59,
	0xfd, 0xee, 0x29, 0xf5, 0x5b, 0x66, 0x4f, 0x61, 0x55, 0xc8, 0xb3, 0x27, 0xda, 0xf3, 0x16, 0x2c,
	0xc6, 0x96, 0x4f, 0x4d, 0x65, 0xfd, 0xfb, 0xa2, 0x7a, 0x73, 0xf0, 0x51, 0xd6, 0x25, 0x6e, 0xc2,
	0xe0, 0x95, 0x9b, 0x9c, 0xb9, 0x81, 0xa0, 0x1c, 0x0f, 0xc4, 0xfe, 0x4b, 0xc0, 0x90, 0x8c, 0xe8,
	0x30, 0x74, 0x63, 0x1e, 0x28, 0xa6, 0x6d, 0x85, 0x6e, 0x62, 0x8d, 0x87, 0x38, 0x51, 0xdf, 0x8d,
	0x8f, 0x68, 0xb4, 0x87, 0x20, 0xfd, 0x53, 0xdc, 0x0c, 0x95, 0x1c, 0x63, 0xae, 0x3f, 0x7d, 0x01,
	0x9b, 0x8f, 0x68, 0x72, 0x10, 0x24, 0x34, 0xa2, 0x71, 0xe2, 0x06, 0xa7, 0x38, 0xf2, 0x5e, 0x1c,
	0x52, 0x3b, 0xb9, 0xd8, 0xb1, 0xf4, 0x9f, 0x83, 0x7e, 0xd1, 0xd0, 0xb9, 0xac, 0x3f, 0x44, 0xdf,
	0xc7, 0x0a, 0xb8, 0x6f, 0x25, 0x96, 0xb2, 0x3b, 0x78, 0x41, 0xdf, 0xa4, 0xbc, 0xf0, 0xb7, 0x6c,
	0xdb, 0x14, 0xd2, 0xb9, 0x93, 0x3f, 0x84, 0xe1, 0x31, 0xb5, 0x22, 0xfb, 0x4c, 0xd1, 0xe1, 0x25,
	0xdf, 0x78, 0xa7, 0x3d, 0x29, 0x7e, 0xf0, 0xce, 0xc0, 0xb7, 0x5e, 0x9b, 0x11, 0x8d, 0x27, 0x5e,
	0x12, 0xcb, 0x7d, 0x11, 0xf8, 0xd6, 0x6b, 0x43, 0x40, 0xf4, 0xc7, 0xb0, 0x90, 0xce, 0x23, 0x79,
	0x7e, 0x09, 0x9d, 0x58, 0xee, 0xf7, 0x44, 0xcb, 0xb3, 0x51, 0x08, 0x95, 0x8c, 0x7a, 0xe2, 0x25,
	0xc7, 0x82, 0xce, 0x48, 0x07, 0xe8, 0x2f, 0x60, 0xb9, 0x02, 0xcf, 0xdd, 0x88, 0xbb, 0x87, 0xe8,
	0x4e, 0xe4, 0x86, 0x84, 0x03, 0xb0, 0x09, 0xfc, 0x1c, 0xda, 0x34, 0x48, 0x5c, 0xcc, 0xcc, 0x9c,
	0xdd, 0x7a, 0x05, 0xbb, 0x07, 0x48, 0x20, 0x26, 0x35, 0x24, 0xb9, 0xfe, 0xdb, 0x40, 0xa6, 0xb1,
	0x95, 0x9b, 0x2f, 0x02, 0x4d, 0x64, 0x2d, 0x5b, 0x53, 0xfe, 0x5b, 0xff, 0xf7, 0x1e, 0x2c, 0x89,
	0x1d, 0x96, 0x92, 0x1d, 0xc9, 0x02, 0xd4, 0xb3, 0xb1, 0x75, 0x31, 0x52, 0xc9, 0x28, 0xf8, 0x9b,
	0xdc, 0x80, 0x61, 0x21, 0x33, 0xc8, 0x2a, 0x31, 0x50, 0xb3, 0x02, 0x57, 0xd9, 0x77, 0x03, 0x53,
	0x74, 0x46, 0x4d, 0xec, 0x8c, 0xba, 0xbe, 0x1b, 0x88, 0xfd, 0x19, 0x47, 0x5a, 0xaf, 0x25, 0xb2,
	0x25, 0x91, 0xd6, 0x6b, 0x81, 0x5c, 0x03, 0xf0, 0xa9, 0x95, 0x0e, 0x6d, 0x23, 0xb6, 0xc7, 0x21,
	0x02, 0xbd, 0x09, 0x03, 0x9f, 0x3a, 0x6e, 0x46, 0xd0, 0x41, 0x82, 0xbe, 0x80, 0x09, 0x92, 0x9b,
	0xb0, 0x90, 0x09, 0x28, 0x88, 0xba, 0x48, 0x94, 0x89, 0x2d, 0xc8, 0xd6, 0xa1, 0x1f, 0x5b, 0x7e,
	0xe8, 0x51, 0x33, 0x76, 0x7f, 0x49, 0x31, 0xee, 0x6b, 0x06, 0x08, 0xd0, 0xb1, 0xfb, 0x4b, 0x0c,
	0x70, 0xdf, 0x8a, 0x4e, 0xdd, 0xc0, 0x64, 0xcf, 0x4d, 0x1a, 0x45, 0x2c, 0xc2, 0x1c, 0xc0, 0x27,
	0x42, 0xf0, 0xe1, 0xf3, 0x07, 0x1c, 0x28, 0xb2, 0x84, 0x23, 0x29, 0xfa, 0x42, 0x9d, 0x38, 0x71,
	0x04, 0xf2, 0xc7, 0x28, 0x4c, 0x60, 0xe6, 0x14, 0x03, 0xa4, 0xe0, 0xe6, 0x0a, 0x8e, 0x53, 0x2a,
	0x3e, 0xc5, 0xc4, 0x97, 0xd2, 0x0e, 0xe5, 0x14, 0x13, 0x5f, 0x08, 0xaa, 0xc3, 0x20, 0xa4, 0x91,
	0xcd, 0x97, 0xdd, 0xa3, 0x1f, 0xef, 0x8e, 0x17, 0xc4, 0x04, 0x2a, 0xac, 0x48, 0x73, 0xe7, 0xee,
	0x78, 0xb1, 0x4c, 0x73, 0xe7, 0x6e, 0x91, 0xe6, 0xf3, 0xbb, 0xe3, 0x51, 0x99, 0xe6, 0xf3, 0x12,
	0xcd, 0x17, 0xbb, 0xe3, 0xa5, 0x32, 0xcd, 0x17, 0xbb, 0x59, 0xa6, 0x24, 0x4a, 0xa6, 0xac, 0xae,
	0x00, 0xcb, 0xb3, 0x2a, 0xc0, 0xd4, 0xb9, 0xde, 0xca, 0xf4, 0xb9, 0x5e, 0x65, 0x47, 0xb2, 0x5a,
	0xdd, 0x91, 0x54, 0xb7, 0x1c, 0x97, 0xdf, 0xb2, 0xe5, 0x10, 0xe9, 0x61, 0x3c, 0x9e, 0x92, 0x56,
	0xc6, 0xd4, 0x3a, 0xf4, 0x4f, 0x23, 0xf6, 0x2a, 0x39, 0x33, 0x23, 0x2e, 0xc3, 0x15, 0xe1, 0x29,
	0x02, 0x64, 0x70, 0xf6, 0x37, 0x60, 0x28, 0x98, 0x50, 0xc7, 0x0c, 0x98, 0x43, 0xc7, 0x9a, 0x50,
	0x27, 0x05, 0x3e, 0x61, 0x0e, 0x25, 0x3b, 0xb0, 0x6c, 0x33, 0x3f, 0xb4, 0x22, 0x37, 0x66, 0x81,
	0xc9, 0x2b, 0x27, 0x56, 0xbc, 0xab, 0x48, 0x4a, 0x72, 0xd4, 0xa1, 0xc4, 0x90, 0x6d, 0x58, 0xe6,
	0x5e, 0xe3, 0xd0, 0x73, 0x57, 0xa8, 0x25, 0xdc, 0xe3, 0x1a, 0xb2, 0x5f, 0x8a, 0x13, 0x67, 0x3f,
	0xc5, 0x08, 0x3f, 0xb9, 0xa0, 0xac, 0xae, 0xbd, 0x5f, 0x59, 0xbd, 0xfe, 0x4e, 0x65, 0x75, 0xbd,
	0xaa, 0xac, 0x7e, 0x0c, 0xea, 0x70, 0xbe, 0x0d, 0x71, 0xad, 0x13, 0x8f, 0x8e, 0x37, 0x30, 0xfd,
	0x2f, 0x2b, 0xb8, 0x67, 0x12, 0x55, 0xac, 0xba, 0x9b, 0xa5, 0xaa, 0xbb, 0x01, 0x03, 0x44, 0x9e,
	0x5b, 0x91, 0xc9, 0x4b, 0x96, 0x8e, 0xf3, 0x60, 0x3f, 0xfa, 0xcc, 0x8a, 0x0e, 0x9c, 0xf8, 0xeb,
	0x66, 0xf7, 0xd2, 0x68, 0x55, 0xff, 0xab, 0x26, 0xf4, 0x44, 0x7e, 0x3b, 0x62, 0x21, 0xb9, 0x02,
	0xdd, 0x90, 0x85, 0xea, 0x9e, 0xa3, 0x13, 0xb2, 0x30, 0x3d, 0xc4, 0x09, 0x26, 0xbe, 0x69, 0xb3,
	0x20, 0x4e, 0x22, 0xcb, 0x0d, 0xb2, 0x32, 0xb1, 0x10, 0x4c, 0xfc, 0xbd, 0x1c, 0x4a, 0xee, 0xc3,
	0x40, 0xf1, 0xa4, 0x78, 0xdc, 0xaa, 0x38, 0x59, 0x9e, 0xca, 0xa8, 0x46, 0x61, 0xcc, 0xb4, 0xdf,
	0xb7, 0x2b, 0xfc, 0xfe, 0x18, 0x16, 0xd3, 0x8e, 0x4b, 0x2c, 0x79, 0x3c, 0xee, 0x22, 0xaf, 0x9f,
	0x54, 0xf0, 0x3a, 0x62, 0x61, 0xb1, 0x7d, 0x8b, 0xc5, 0xb6, 0x7b, 0x21, 0x2c, 0x00, 0xd1, 0x02,
	0xd8, 0xa8, 0xb8, 0x8e, 0x6c, 0x71, 0x3a, 0xf8, 0x7d, 0xe0, 0x90, 0x4b, 0xd0, 0xe6, 0xc6, 0x71,
	0x1d, 0xd9, 0xe2, 0xb4, 0x42, 0x16, 0x1e, 0x60, 0x90, 0xd8, 0x67, 0xae, 0xe7, 0x9c, 0x31, 0xe6,
	0x98, 0x1e, 0xb3, 0xc5, 0xe9, 0x71, 0x5f, 0x04, 0x49, 0x86, 0x79, 0x2c, 0x11, 0xe4, 0x18, 0x2e,
	0x09, 0x1f, 0xa6, 0x8e, 0x59, 0xb0, 0xd3, 0xe0, 0xad, 0xec, 0xb4, 0x92, 0x0e, 0x56, 0x9b, 0x75,
	0xed, 0x1e, 0x2c, 0x57, 0x28, 0x37, 0x6f, 0x17, 0xde, 0x2b, 0xee, 0xe1, 0x1b, 0xa3, 0xe6, 0xd7,
	0xcd, 0x6e, 0x73, 0xd4, 0xfa, 0xba, 0xd9, 0xed, 0x8c, 0xba, 0xfa, 0x3f, 0xb7, 0xa0, 0x2f, 0x8d,
	0x87, 0xdd, 0x57, 0x5a, 0x1e, 0x6b, 0x79, 0x79, 0xac, 0x2c, 0x7c, 0xbf, 0x0b, 0xfd, 0xbc, 0xa5,
	0x4e, 0x1b, 0xe9, 0x0f, 0xab, 0xd6, 0x84, 0x4f, 0xbb, 0xad, 0x6c, 0xee, 0xc4, 0x92, 0xa8, 0xa3,
	0xf3, 0xed, 0x7a, 0x53, 0x3d, 0x43, 0xd3, 0xa0, 0xcb, 0x09, 0x92, 0x89, 0x93, 0x15, 0xc6, 0xf4,
	0x9b, 0x5c, 0x83, 0x9e, 0xc7, 0x82, 0x53, 0x81, 0x94, 0x75, 0x31, 0x03, 0x70, 0x37, 0x7e, 0xe1,
	0x7b, 0xa6, 0xcd, 0x58, 0xe4, 0xf0, 0xb0, 0xa6, 0xb1, 0x6c, 0x8a, 0x17, 0x5e, 0xf8, 0xde, 0x5e,
	0x0e, 0x25, 0xbf, 0xaa, 0xc1, 0xf5, 0xe9, 0x75, 0x35, 0x55, 0xcd, 0x84, 0xb7, 0x7d, 0x39, 0x53,
	0xb3, 0xbd, 0xf2, 0xe2, 0x4f, 0xa9, 0x7a, 0xcd, 0xbe, 0x80, 0x64, 0x2a, 0x92, 0x7a, 0xef, 0x11,
	0x49, 0x23, 0x68, 0xf8, 0x99, 0xc7, 0xf2, 0x9f, 0x3c, 0x5d, 0xda, 0x2c, 0x48, 0x2c, 0x37, 0xa0,
	0x8e, 0x99, 0x76, 0xdb, 0xf1, 0xb8, 0x8f, 0x09, 0x62, 0x29, 0x43, 0x1d, 0x88, 0x9e, 0x3b, 0xd6,
	0x9e, 0xc1, 0xa8, 0x2c, 0x77, 0x85, 0x63, 0x7d, 0xa4, 0x3a, 0x56, 0xff, 0xce, 0x6a, 0x75, 0x08,
	0x2a, 0x0e, 0xa7, 0x9d, 0xc2, 0xe6, 0x5c, 0x03, 0xfd, 0x10, 0x8c, 0xf4, 0x7d, 0x54, 0xe0, 0xf0,
	0x24, 0xde, 0x63, 0x9e, 0x27, 0x5b, 0xcd, 0x5d, 0x68, 0x4b, 0xbd, 0x45, 0xf3, 0x3a, 0x9e, 0xb5,
	0x88, 0x86, 0xa4, 0xd3, 0x7f, 0x5d, 0x03, 0x10, 0x1d, 0xe4, 0x41, 0xf0, 0x9c, 0x55, 0x06, 0xc3,
	0x0a, 0xb4, 0x78, 0x00, 0x88, 0xeb, 0xae, 0x9e, 0x21, 0x3e, 0xb2, 0x4e, 0xb3, 0xa1, 0x74, 0x9a,
	0x53, 0xf9, 0xad, 0x59, 0x91, 0xdf, 0xb2, 0x58, 0x6d, 0xa9, 0x47, 0xf0, 0x1e, 0xac, 0xe4, 0x62,
	0x28, 0x1a, 0x7d, 0x02, 0x5d, 0x6c, 0x78, 0xdd, 0x4c, 0xa7, 0xcb, 0x05, 0x9d, 0xf2, 0x41, 0x46,
	0x46, 0xc8, 0x2b, 0x76, 0xc2, 0x12, 0x8b, 0xc7, 0xc3, 0x24, 0x10, 0x67, 0xb2, 0x0d, 0x03, 0x10,
	0xb4, 0xc7, 0x21, 0xfa, 0x9f, 0xd7, 0x60, 0xbc, 0x57, 0x72, 0x09, 0xdc, 0x5b, 0xc9, 0x7e, 0x9d,
	0xa7, 0xa2, 0x20, 0x31, 0xb3, 0x66, 0xb8, 0x2b, 0x00, 0x07, 0x78, 0xd8, 0x28, 0x91, 0x4a, 0x82,
	0x00, 0x01, 0xc2, 0x82, 0x72, 0x05, 0xba, 0xe8, 0xfd, 0x66, 0x66, 0x9b, 0x0e, 0x7e, 0x1f, 0x38,
	0xbc, 0xb7, 0x15, 0x28, 0xf5, 0xe0, 0x04, 0x21, 0x78, 0x5a, 0xf0, 0x0f, 0x75, 0x68, 0x8b, 0xab,
	0x17, 0x3c, 0x62, 0x99, 0x9c, 0xfc, 0x01, 0xb5, 0x15, 0x19, 0x7a, 0x12, 0x72, 0xe0, 0xf0, 0x5c,
	0x10, 0x46, 0xd4, 0x71, 0x6d, 0xde, 0x8f, 0xa4, 0xa7, 0x0e, 0x29, 0x80, 0xcb, 0xcf, 0xb2, 0xb1,
	0xf2, 0x9e, 0x8b, 0xa5, 0x43, 0xd7, 0xa1, 0x2f, 0x91, 0xb8, 0xce, 0x42, 0x08, 0x10, 0x20, 0xdc,
	0x90, 0x6c, 0xf2, 0xe8, 0x44, 0x02, 0x75, 0x95, 0xe4, 0xa0, 0x67, 0xd5, 0xd7, 0xb2, 0x55, 0x65,
	0x6c, 0x13, 0x06, 0xa9, 0x0a, 0xc8, 0x49, 0xa4, 0xa3, 0xbe, 0x84, 0x21, 0xab, 0x1b, 0x30, 0x4c,
	0x49, 0x84, 0x83, 0x75, 0xd1, 0xc1, 0xd2, 0x71, 0x4f, 0xd1, 0xcf, 0x72, 0x79, 0x04, 0x0d, 0x20,
	0x8d, 0x94, 0x07, 0x49, 0xf4, 0xef, 0xa0, 0x23, 0xaf, 0xac, 0xc8, 0x16, 0x74, 0x12, 0xf1, 0x53,
	0x7a, 0x4b, 0xf1, 0x7c, 0x48, 0x90, 0x19, 0x29, 0xcd, 0x7c, 0x47, 0x09, 0x60, 0xe1, 0x28, 0xd7,
	0x8a, 0x47, 0xc8, 0x94, 0xf2, 0xb5, 0x0a, 0xe5, 0x57, 0xa1, 0xed, 0x30, 0xdf, 0x72, 0xd3, 0xeb,
	0x56, 0xf9, 0x55, 0x3e, 0xaa, 0x6e, 0x94, 0x8f, 0xaa, 0xf5, 0xc7, 0xd0, 0xcf, 0xf9, 0xc5, 0xe4,
	0x77, 0xa0, 0x9f, 0xcf, 0x9b, 0xaa, 0x74, 0xb5, 0x7c, 0x78, 0xa3, 0x88, 0x67, 0xa8, 0xf4, 0x7c,
	0x7b, 0x5b, 0xbc, 0x76, 0xe5, 0xbe, 0xe1, 0x06, 0xa6, 0x87, 0x1f, 0x72, 0x0f, 0xde, 0x75, 0x03,
	0x89, 0x5c, 0x03, 0x60, 0x93, 0x24, 0xc5, 0x8a, 0x68, 0xef, 0xb1, 0x49, 0x22, 0xd0, 0xfa, 0xaf,
	0x45, 0xe1, 0x4c, 0x8f, 0x66, 0xc9, 0x57, 0x00, 0xb6, 0xf8, 0x9d, 0x07, 0xe7, 0xed, 0x72, 0xc2,
	0x49, 0xa9, 0xb7, 0xf7, 0x32, 0x52, 0x51, 0x23, 0x94, 0xb1, 0xda, 0x3f, 0xd6, 0xa0, 0x79, 0x90,
	0x50, 0x7f, 0xde, 0x8d, 0x9b, 0xda, 0xc7, 0xd5, 0x8b, 0x7d, 0xdc, 0xdb, 0x6e, 0x4b, 0xf3, 0xd6,
	0xb2, 0x59, 0x6a, 0x2d, 0xaf, 0x03, 0xc8, 0xa6, 0x89, 0xab, 0xd3, 0x12, 0x8d, 0x65, 0x0e, 0xe1,
	0x6b, 0x2a, 0xdb, 0xb1, 0xb6, 0x78, 0x0c, 0x20, 0xbe, 0xb4, 0xbf, 0xa9, 0x01, 0xf9, 0x46, 0x72,
	0xe1, 0xe9, 0x35, 0x62, 0xe1, 0xd1, 0xb3, 0x98, 0x3c, 0x14, 0xe7, 0x6d, 0xc2, 0x2c, 0x9f, 0xce,
	0x34, 0xcb, 0xf4, 0xc8, 0xed, 0xa3, 0x73, 0x69, 0x22, 0x3c, 0x89, 0xe3, 0x9d, 0x42, 0xc4, 0xc2,
	0x2c, 0xfb, 0xe2, 0x87, 0xf6, 0x19, 0x74, 0x53, 0xb2, 0x77, 0x69, 0x87, 0xb4, 0xef, 0x60, 0xf1,
	0x48, 0x58, 0x2c, 0x5b, 0xc6, 0x87, 0xe2, 0xba, 0xd4, 0xcc, 0xa5, 0xfd, 0xe9, 0x3b, 0x48, 0x6b,
	0x74, 0xf8, 0xe0, 0xa3, 0xf3, 0x58, 0x3b, 0x85, 0xc5, 0xd2, 0x1a, 0x57, 0x48, 0xf6, 0xf3, 0x62,
	0x99, 0x9b, 0xed, 0x2e, 0x25, 0x29, 0xd5, 0xc2, 0xf7, 0x5f, 0x35, 0x58, 0x2a, 0x1c, 0x84, 0x61,
	0x5c, 0xde, 0x84, 0x85, 0x48, 0x00, 0x4d, 0xa5, 0x04, 0xf6, 0x8c, 0x61, 0xa4, 0x92, 0x12, 0x1d,
	0x86, 0x91, 0x15, 0xbc, 0x30, 0x9f, 0x47, 0xcc, 0x37, 0x13, 0x16, 0xca, 0x6e, 0xbf, 0xcf, 0x81,
	0x0f, 0x23, 0xe6, 0x3f, 0x65, 0x21, 0xb9, 0x0d, 0xa3, 0x9c, 0xe6, 0x84, 0x25, 0x09, 0xf3, 0xd1,
	0x9d, 0x5a, 0xc6, 0x42, 0x4a, 0x76, 0x1f, 0xa1, 0xdc, 0x5f, 0x2d, 0xcf, 0x4b, 0x19, 0x36, 0x45,
	0xc4, 0x58, 0x9e, 0x27, 0x99, 0xdd, 0x82, 0xc5, 0x84, 0x85, 0xe6, 0xc7, 0xbb, 0xbb, 0xbb, 0x29,
	0x8d, 0xf0, 0xab, 0x61, 0xc2, 0x42, 0x0e, 0x95, 0x74, 0x1f, 0x01, 0x11, 0x6c, 0x0a, 0xa4, 0xc2,
	0xcd, 0x46, 0x02, 0x93, 0x53, 0xeb, 0xff, 0xd4, 0x80, 0xe5, 0xe3, 0xc4, 0x4a, 0xdc, 0x38, 0x71,
	0x6d, 0xcb, 0xcb, 0x36, 0x4e, 0x17, 0xec, 0x72, 0x7e, 0x26, 0x9c, 0xb1, 0x5e, 0xd1, 0xb3, 0x56,
	0xcc, 0x54, 0xf2, 0xc0, 0xb7, 0x0a, 0xad, 0xea, 0x13, 0x80, 0xe6, 0x7b, 0x9c, 0x01, 0xb7, 0xde,
	0x6f, 0xb3, 0xda, 0x7e, 0xa7, 0xcd, 0x6a, 0xe7, 0xa2, 0x33, 0xe0, 0xee, 0xac, 0x33, 0xe0, 0x5e,
	0x31, 0x65, 0xbc, 0x6f, 0x14, 0xea, 0xff, 0x51, 0x87, 0xd5, 0xea, 0x93, 0x55, 0xb2, 0x0f, 0x1d,
	0x4b, 0x9c, 0xb1, 0xca, 0x60, 0x2c, 0xee, 0xfa, 0xaa, 0x47, 0x6d, 0x8b, 0x3f, 0x46, 0x3a, 0x54,
	0xfb, 0xef, 0x1a, 0xb4, 0xe5, 0x84, 0x53, 0x0e, 0x5f, 0x7b, 0x3b, 0x87, 0xaf, 0x57, 0x3a, 0xfc,
	0xcf, 0xa0, 0x9b, 0xee, 0xbf, 0xe5, 0xad, 0xe1, 0xc6, 0x3c, 0x6f, 0x32, 0x3a, 0x72, 0x77, 0xce,
	0xdd, 0x7c, 0xba, 0x45, 0x4f, 0x6f, 0x15, 0xca, 0x1d, 0x7a, 0xa9, 0x16, 0xb4, 0xca, 0xb5, 0x80,
	0xa3, 0xf3, 0x13, 0xf3, 0x36, 0x9e, 0x98, 0xf7, 0xc2, 0xf4, 0xbc, 0xfc, 0xce, 0xf7, 0xcb, 0xd0,
	0xfa, 0xc6, 0x7d, 0x4d, 0x23, 0xf2, 0x04, 0x5a, 0xf8, 0x26, 0x8b, 0x5c, 0xa9, 0x7a, 0xa7, 0x85,
	0xc7, 0xc7, 0x9a, 0x36, 0xfb, 0x09, 0x97, 0xbe, 0xf0, 0x27, 0xff, 0xfa, 0x9f, 0x7f, 0x51, 0xef,
	0x92, 0xf6, 0x8e, 0x38, 0x54, 0xfe, 0x05, 0xf4, 0x90, 0xe0, 0x88, 0xc5, 0xc9, 0xfb, 0xce, 0xb9,
	0x84, 0x73, 0xf6, 0x75, 0x39, 0xe7, 0x97, 0xb5, 0x9f, 0x90, 0x3f, 0xae, 0x89, 0x67, 0x2f, 0xc5,
	0x7a, 0x7d, 0xb3, 0x30, 0xc9, 0xac, 0x57, 0x5a, 0xda, 0xad, 0x79, 0x64, 0x92, 0xef, 0x1a, 0xf2,
	0xbd, 0x4c, 0x2e, 0xed, 0x04, 0xcc, 0xa1, 0x3b, 0xe9, 0x21, 0xc1, 0x96, 0x28, 0xf9, 0xe4, 0x4f,
	0xe5, 0x55, 0x6a, 0x61, 0x30, 0xea, 0xf9, 0x03, 0xcb, 0xb1, 0x81, 0x72, 0x68, 0x7a, 0xb5, 0x1c,
	0x15, 0xe6, 0x90, 0xc7, 0x18, 0x33, 0xc5, 0x28, 0xbc, 0x0e, 0x9b, 0x2d, 0x46, 0xf1, 0xd9, 0xd5,
	0x4c, 0x73, 0x88, 0xca, 0x5e, 0x36, 0x87, 0x18, 0x7c, 0xb1, 0x39, 0xde, 0x4f, 0x8e, 0x59, 0xe6,
	0x10, 0x72, 0x70, 0x73, 0x38, 0x00, 0xf9, 0xc3, 0x2c, 0x72, 0xbd, 0x3c, 0x6f, 0xf1, 0x7d, 0x98,
	0xb6, 0x3e, 0x13, 0x2f, 0x19, 0x5e, 0x42, 0x86, 0x8b, 0x64, 0x28, 0x18, 0xa6, 0xed, 0xf0, 0x0b,
	0x58, 0xc8, 0x89, 0x51, 0xd1, 0xff, 0x35, 0xa7, 0x31, 0x72, 0x22, 0x7a, 0x91, 0x13, 0x57, 0xe9,
	0x15, 0x32, 0x53, 0x0f, 0x06, 0xf4, 0x29, 0x73, 0x4d, 0xdd, 0xe9, 0x6b, 0x37, 0x2e, 0xa4, 0x91,
	0x4c, 0xaf, 0x21, 0xd3, 0x55, 0x7d, 0x49, 0xda, 0x33, 0x27, 0xe1, 0x8c, 0xff, 0x10, 0x5f, 0x4f,
	0x1c, 0x16, 0x0e, 0xe6, 0xca, 0xb3, 0x56, 0xdc, 0xb2, 0x6b, 0x3f, 0xbe, 0x98, 0xa8, 0xe8, 0x53,
	0x3a, 0x11, 0xbc, 0xd5, 0x53, 0x0b, 0xce, 0xdc, 0x85, 0xbe, 0x72, 0x25, 0x4c, 0xa6, 0xec, 0x57,
	0xba, 0x77, 0xd6, 0x36, 0x66, 0x13, 0x48, 0x86, 0x97, 0x91, 0xe1, 0x12, 0x59, 0x94, 0xca, 0x22,
	0x7e, 0xcb, 0x0d, 0x48, 0x88, 0x7a, 0xa6, 0xf4, 0xb8, 0x9c, 0x3f, 0x00, 0x3b, 0x0d, 0xd9, 0xad,
	0xe8, 0x65, 0x76, 0x5c, 0x39, 0x0b, 0x7a, 0xd9, 0xcb, 0x3d, 0xb2, 0x56, 0xb1, 0x52, 0xf9, 0xe3,
	0x3a, 0xed, 0xfa, 0x2c, 0xf4, 0x94, 0x8b, 0x9e, 0x4c, 0xbc, 0x17, 0x7c, 0x0d, 0xb7, 0xd8, 0x49,
	0x4c, 0xbc, 0xdc, 0x7e, 0x9c, 0x49, 0xb5, 0x42, 0x0a, 0x9b, 0x8d, 0xd9, 0x04, 0x53, 0x0a, 0x09,
	0x46, 0x1c, 0xcf, 0x59, 0x71, 0x85, 0x42, 0x18, 0xa8, 0x0f, 0xca, 0xc8, 0x46, 0x85, 0x0b, 0x14,
	0x1e, 0xc7, 0x69, 0x9b, 0x17, 0x50, 0x48, 0x86, 0x57, 0x91, 0xe1, 0x25, 0x7d, 0x24, 0x18, 0xb2,
	0x93, 0x78, 0x4b, 0xbc, 0x08, 0xe2, 0x1c, 0x4d, 0xe8, 0xa6, 0xef, 0x6c, 0xc8, 0xb5, 0xf2, 0x5c,
	0xea, 0x8b, 0x1f, 0x6d, 0x6d, 0x06, 0x56, 0x72, 0x59, 0x45, 0x2e, 0x23, 0xbd, 0x2f, 0xb8, 0xe0,
	0xfb, 0x0c, 0xce, 0x60, 0x92, 0x86, 0x5d, 0xb6, 0x01, 0xa8, 0x0a, 0xbb, 0xd2, 0xbb, 0x9d, 0xca,
	0xb0, 0x2b, 0xbf, 0xd1, 0x49, 0x2d, 0x49, 0x48, 0xbe, 0x64, 0x76, 0xca, 0xe4, 0x57, 0x35, 0x7c,
	0x40, 0x54, 0xe8, 0xdb, 0xc9, 0x54, 0x44, 0x55, 0x3d, 0x7c, 0xd0, 0x6e, 0xce, 0xa1, 0x92, 0xdc,
	0xd7, 0x91, 0xfb, 0x15, 0x7d, 0x45, 0x38, 0xa6, 0x6c, 0xfb, 0xb7, 0x84, 0x83, 0x72, 0xcd, 0xff,
	0xba, 0x06, 0xda, 0xec, 0x2b, 0x6d, 0xb2, 0x5d, 0x66, 0x73, 0xf1, 0xb5, 0xb9, 0xb6, 0xf3, 0xd6,
	0xf4, 0x52, 0xc0, 0x0f, 0x50, 0xc0, 0x4d, 0xb2, 0x2e, 0x04, 0x74, 0x73, 0x72, 0x21, 0xe4, 0x96,
	0xec, 0xde, 0xa4, 0xd7, 0x65, 0xf7, 0xe1, 0xd3, 0x5e, 0x57, 0xbe, 0x55, 0x9f, 0xf6, 0xba, 0xa9,
	0xcb, 0x74, 0xc5, 0xeb, 0x90, 0xbb, 0xcd, 0x09, 0xb6, 0xf8, 0x28, 0x19, 0xb8, 0xd9, 0x53, 0xf2,
	0x52, 0xe0, 0x96, 0x5f, 0xad, 0x97, 0x02, 0x77, 0xea, 0x05, 0x7a, 0x1a, 0xb8, 0x3a, 0xec, 0xa4,
	0x6f, 0xcc, 0x29, 0x67, 0x61, 0x40, 0x5b, 0xdc, 0x57, 0x13, 0xad, 0xf2, 0x46, 0x5d, 0x4c, 0x7e,
	0xb5, 0xfa, 0xb6, 0x5d, 0xcc, 0xbc, 0x88, 0x33, 0xf7, 0x48, 0x67, 0x27, 0x46, 0xc4, 0x49, 0x1b,
	0xff, 0xf1, 0xe1, 0x93, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x82, 0xc9, 0x62, 0x32, 0x31,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MixerClient is the client API for Mixer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MixerClient interface {
	// Query DataCommons Graph with Sparql.
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	// Query DataCommons Graph with Sparql.
	QueryPost(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	// Fetch property labels adjacent of nodes
	GetPropertyLabels(ctx context.Context, in *GetPropertyLabelsRequest, opts ...grpc.CallOption) (*GetPropertyLabelsResponse, error)
	// Fetch property labels adjacent of nodes
	GetPropertyLabelsPost(ctx context.Context, in *GetPropertyLabelsRequest, opts ...grpc.CallOption) (*GetPropertyLabelsResponse, error)
	// Fetch nodes that linked to source nodes with a given property.
	GetPropertyValues(ctx context.Context, in *GetPropertyValuesRequest, opts ...grpc.CallOption) (*GetPropertyValuesResponse, error)
	// Fetch nodes that linked to source nodes with a given property.
	GetPropertyValuesPost(ctx context.Context, in *GetPropertyValuesRequest, opts ...grpc.CallOption) (*GetPropertyValuesResponse, error)
	// Fetch triples that have the given nodes as subject or object.
	GetTriples(ctx context.Context, in *GetTriplesRequest, opts ...grpc.CallOption) (*GetTriplesResponse, error)
	// Fetch triples that have the given nodes as subject or object.
	GetTriplesPost(ctx context.Context, in *GetTriplesRequest, opts ...grpc.CallOption) (*GetTriplesResponse, error)
	// Get populations for a list of places, given the population type and constraining property
	// values.
	GetPopulations(ctx context.Context, in *GetPopulationsRequest, opts ...grpc.CallOption) (*GetPopulationsResponse, error)
	// Get observations for a list of population, given the observation constraints.
	GetObservations(ctx context.Context, in *GetObservationsRequest, opts ...grpc.CallOption) (*GetObservationsResponse, error)
	// Get places contained in parent places.
	GetPlacesIn(ctx context.Context, in *GetPlacesInRequest, opts ...grpc.CallOption) (*GetPlacesInResponse, error)
	// Get places contained in parent places.
	GetPlacesInPost(ctx context.Context, in *GetPlacesInRequest, opts ...grpc.CallOption) (*GetPlacesInResponse, error)
	// Get population and observation data for a place.
	GetPopObs(ctx context.Context, in *GetPopObsRequest, opts ...grpc.CallOption) (*GetPopObsResponse, error)
	// Get observation data for a list of places, given place type, population type, and
	// population constraining properties.
	GetPlaceObs(ctx context.Context, in *GetPlaceObsRequest, opts ...grpc.CallOption) (*GetPlaceObsResponse, error)
	// Get observations for a given place, population type, and population constraining properties.
	GetObsSeries(ctx context.Context, in *GetObsSeriesRequest, opts ...grpc.CallOption) (*GetObsSeriesResponse, error)
	// Get stats of places by StatisticalVariable.
	GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsResponse, error)
	// Get a list of possible population type, measured property, and PVs for a given place type.
	GetPopCategory(ctx context.Context, in *GetPopCategoryRequest, opts ...grpc.CallOption) (*GetPopCategoryResponse, error)
	// Get related places for a given statistical variable.
	GetRelatedPlaces(ctx context.Context, in *GetRelatedPlacesRequest, opts ...grpc.CallOption) (*GetRelatedPlacesResponse, error)
	// Get interesting aspects for places.
	GetInterestingPlaceAspects(ctx context.Context, in *GetInterestingPlaceAspectsRequest, opts ...grpc.CallOption) (*GetInterestingPlaceAspectsResponse, error)
	// Get chart data.
	GetChartData(ctx context.Context, in *GetChartDataRequest, opts ...grpc.CallOption) (*GetChartDataResponse, error)
	// Translate Sparql Query into translation results.
	Translate(ctx context.Context, in *TranslateRequest, opts ...grpc.CallOption) (*TranslateResponse, error)
	// Given a text search query, return all entities matching the query.
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type mixerClient struct {
	cc *grpc.ClientConn
}

func NewMixerClient(cc *grpc.ClientConn) MixerClient {
	return &mixerClient{cc}
}

func (c *mixerClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) QueryPost(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/QueryPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPropertyLabels(ctx context.Context, in *GetPropertyLabelsRequest, opts ...grpc.CallOption) (*GetPropertyLabelsResponse, error) {
	out := new(GetPropertyLabelsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPropertyLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPropertyLabelsPost(ctx context.Context, in *GetPropertyLabelsRequest, opts ...grpc.CallOption) (*GetPropertyLabelsResponse, error) {
	out := new(GetPropertyLabelsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPropertyLabelsPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPropertyValues(ctx context.Context, in *GetPropertyValuesRequest, opts ...grpc.CallOption) (*GetPropertyValuesResponse, error) {
	out := new(GetPropertyValuesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPropertyValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPropertyValuesPost(ctx context.Context, in *GetPropertyValuesRequest, opts ...grpc.CallOption) (*GetPropertyValuesResponse, error) {
	out := new(GetPropertyValuesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPropertyValuesPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetTriples(ctx context.Context, in *GetTriplesRequest, opts ...grpc.CallOption) (*GetTriplesResponse, error) {
	out := new(GetTriplesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetTriples", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetTriplesPost(ctx context.Context, in *GetTriplesRequest, opts ...grpc.CallOption) (*GetTriplesResponse, error) {
	out := new(GetTriplesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetTriplesPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPopulations(ctx context.Context, in *GetPopulationsRequest, opts ...grpc.CallOption) (*GetPopulationsResponse, error) {
	out := new(GetPopulationsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPopulations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetObservations(ctx context.Context, in *GetObservationsRequest, opts ...grpc.CallOption) (*GetObservationsResponse, error) {
	out := new(GetObservationsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetObservations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPlacesIn(ctx context.Context, in *GetPlacesInRequest, opts ...grpc.CallOption) (*GetPlacesInResponse, error) {
	out := new(GetPlacesInResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPlacesIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPlacesInPost(ctx context.Context, in *GetPlacesInRequest, opts ...grpc.CallOption) (*GetPlacesInResponse, error) {
	out := new(GetPlacesInResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPlacesInPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPopObs(ctx context.Context, in *GetPopObsRequest, opts ...grpc.CallOption) (*GetPopObsResponse, error) {
	out := new(GetPopObsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPopObs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPlaceObs(ctx context.Context, in *GetPlaceObsRequest, opts ...grpc.CallOption) (*GetPlaceObsResponse, error) {
	out := new(GetPlaceObsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPlaceObs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetObsSeries(ctx context.Context, in *GetObsSeriesRequest, opts ...grpc.CallOption) (*GetObsSeriesResponse, error) {
	out := new(GetObsSeriesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetObsSeries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsResponse, error) {
	out := new(GetStatsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPopCategory(ctx context.Context, in *GetPopCategoryRequest, opts ...grpc.CallOption) (*GetPopCategoryResponse, error) {
	out := new(GetPopCategoryResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPopCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetRelatedPlaces(ctx context.Context, in *GetRelatedPlacesRequest, opts ...grpc.CallOption) (*GetRelatedPlacesResponse, error) {
	out := new(GetRelatedPlacesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetRelatedPlaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetInterestingPlaceAspects(ctx context.Context, in *GetInterestingPlaceAspectsRequest, opts ...grpc.CallOption) (*GetInterestingPlaceAspectsResponse, error) {
	out := new(GetInterestingPlaceAspectsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetInterestingPlaceAspects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetChartData(ctx context.Context, in *GetChartDataRequest, opts ...grpc.CallOption) (*GetChartDataResponse, error) {
	out := new(GetChartDataResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetChartData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) Translate(ctx context.Context, in *TranslateRequest, opts ...grpc.CallOption) (*TranslateResponse, error) {
	out := new(TranslateResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/Translate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MixerServer is the server API for Mixer service.
type MixerServer interface {
	// Query DataCommons Graph with Sparql.
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
	// Query DataCommons Graph with Sparql.
	QueryPost(context.Context, *QueryRequest) (*QueryResponse, error)
	// Fetch property labels adjacent of nodes
	GetPropertyLabels(context.Context, *GetPropertyLabelsRequest) (*GetPropertyLabelsResponse, error)
	// Fetch property labels adjacent of nodes
	GetPropertyLabelsPost(context.Context, *GetPropertyLabelsRequest) (*GetPropertyLabelsResponse, error)
	// Fetch nodes that linked to source nodes with a given property.
	GetPropertyValues(context.Context, *GetPropertyValuesRequest) (*GetPropertyValuesResponse, error)
	// Fetch nodes that linked to source nodes with a given property.
	GetPropertyValuesPost(context.Context, *GetPropertyValuesRequest) (*GetPropertyValuesResponse, error)
	// Fetch triples that have the given nodes as subject or object.
	GetTriples(context.Context, *GetTriplesRequest) (*GetTriplesResponse, error)
	// Fetch triples that have the given nodes as subject or object.
	GetTriplesPost(context.Context, *GetTriplesRequest) (*GetTriplesResponse, error)
	// Get populations for a list of places, given the population type and constraining property
	// values.
	GetPopulations(context.Context, *GetPopulationsRequest) (*GetPopulationsResponse, error)
	// Get observations for a list of population, given the observation constraints.
	GetObservations(context.Context, *GetObservationsRequest) (*GetObservationsResponse, error)
	// Get places contained in parent places.
	GetPlacesIn(context.Context, *GetPlacesInRequest) (*GetPlacesInResponse, error)
	// Get places contained in parent places.
	GetPlacesInPost(context.Context, *GetPlacesInRequest) (*GetPlacesInResponse, error)
	// Get population and observation data for a place.
	GetPopObs(context.Context, *GetPopObsRequest) (*GetPopObsResponse, error)
	// Get observation data for a list of places, given place type, population type, and
	// population constraining properties.
	GetPlaceObs(context.Context, *GetPlaceObsRequest) (*GetPlaceObsResponse, error)
	// Get observations for a given place, population type, and population constraining properties.
	GetObsSeries(context.Context, *GetObsSeriesRequest) (*GetObsSeriesResponse, error)
	// Get stats of places by StatisticalVariable.
	GetStats(context.Context, *GetStatsRequest) (*GetStatsResponse, error)
	// Get a list of possible population type, measured property, and PVs for a given place type.
	GetPopCategory(context.Context, *GetPopCategoryRequest) (*GetPopCategoryResponse, error)
	// Get related places for a given statistical variable.
	GetRelatedPlaces(context.Context, *GetRelatedPlacesRequest) (*GetRelatedPlacesResponse, error)
	// Get interesting aspects for places.
	GetInterestingPlaceAspects(context.Context, *GetInterestingPlaceAspectsRequest) (*GetInterestingPlaceAspectsResponse, error)
	// Get chart data.
	GetChartData(context.Context, *GetChartDataRequest) (*GetChartDataResponse, error)
	// Translate Sparql Query into translation results.
	Translate(context.Context, *TranslateRequest) (*TranslateResponse, error)
	// Given a text search query, return all entities matching the query.
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

// UnimplementedMixerServer can be embedded to have forward compatible implementations.
type UnimplementedMixerServer struct {
}

func (*UnimplementedMixerServer) Query(ctx context.Context, req *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedMixerServer) QueryPost(ctx context.Context, req *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPost not implemented")
}
func (*UnimplementedMixerServer) GetPropertyLabels(ctx context.Context, req *GetPropertyLabelsRequest) (*GetPropertyLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyLabels not implemented")
}
func (*UnimplementedMixerServer) GetPropertyLabelsPost(ctx context.Context, req *GetPropertyLabelsRequest) (*GetPropertyLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyLabelsPost not implemented")
}
func (*UnimplementedMixerServer) GetPropertyValues(ctx context.Context, req *GetPropertyValuesRequest) (*GetPropertyValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyValues not implemented")
}
func (*UnimplementedMixerServer) GetPropertyValuesPost(ctx context.Context, req *GetPropertyValuesRequest) (*GetPropertyValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyValuesPost not implemented")
}
func (*UnimplementedMixerServer) GetTriples(ctx context.Context, req *GetTriplesRequest) (*GetTriplesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTriples not implemented")
}
func (*UnimplementedMixerServer) GetTriplesPost(ctx context.Context, req *GetTriplesRequest) (*GetTriplesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTriplesPost not implemented")
}
func (*UnimplementedMixerServer) GetPopulations(ctx context.Context, req *GetPopulationsRequest) (*GetPopulationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPopulations not implemented")
}
func (*UnimplementedMixerServer) GetObservations(ctx context.Context, req *GetObservationsRequest) (*GetObservationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetObservations not implemented")
}
func (*UnimplementedMixerServer) GetPlacesIn(ctx context.Context, req *GetPlacesInRequest) (*GetPlacesInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlacesIn not implemented")
}
func (*UnimplementedMixerServer) GetPlacesInPost(ctx context.Context, req *GetPlacesInRequest) (*GetPlacesInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlacesInPost not implemented")
}
func (*UnimplementedMixerServer) GetPopObs(ctx context.Context, req *GetPopObsRequest) (*GetPopObsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPopObs not implemented")
}
func (*UnimplementedMixerServer) GetPlaceObs(ctx context.Context, req *GetPlaceObsRequest) (*GetPlaceObsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlaceObs not implemented")
}
func (*UnimplementedMixerServer) GetObsSeries(ctx context.Context, req *GetObsSeriesRequest) (*GetObsSeriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetObsSeries not implemented")
}
func (*UnimplementedMixerServer) GetStats(ctx context.Context, req *GetStatsRequest) (*GetStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStats not implemented")
}
func (*UnimplementedMixerServer) GetPopCategory(ctx context.Context, req *GetPopCategoryRequest) (*GetPopCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPopCategory not implemented")
}
func (*UnimplementedMixerServer) GetRelatedPlaces(ctx context.Context, req *GetRelatedPlacesRequest) (*GetRelatedPlacesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelatedPlaces not implemented")
}
func (*UnimplementedMixerServer) GetInterestingPlaceAspects(ctx context.Context, req *GetInterestingPlaceAspectsRequest) (*GetInterestingPlaceAspectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInterestingPlaceAspects not implemented")
}
func (*UnimplementedMixerServer) GetChartData(ctx context.Context, req *GetChartDataRequest) (*GetChartDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChartData not implemented")
}
func (*UnimplementedMixerServer) Translate(ctx context.Context, req *TranslateRequest) (*TranslateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Translate not implemented")
}
func (*UnimplementedMixerServer) Search(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}

func RegisterMixerServer(s *grpc.Server, srv MixerServer) {
	s.RegisterService(&_Mixer_serviceDesc, srv)
}

func _Mixer_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_QueryPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).QueryPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/QueryPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).QueryPost(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPropertyLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPropertyLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPropertyLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPropertyLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPropertyLabels(ctx, req.(*GetPropertyLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPropertyLabelsPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPropertyLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPropertyLabelsPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPropertyLabelsPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPropertyLabelsPost(ctx, req.(*GetPropertyLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPropertyValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPropertyValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPropertyValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPropertyValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPropertyValues(ctx, req.(*GetPropertyValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPropertyValuesPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPropertyValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPropertyValuesPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPropertyValuesPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPropertyValuesPost(ctx, req.(*GetPropertyValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetTriples_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTriplesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetTriples(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetTriples",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetTriples(ctx, req.(*GetTriplesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetTriplesPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTriplesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetTriplesPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetTriplesPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetTriplesPost(ctx, req.(*GetTriplesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPopulations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPopulationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPopulations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPopulations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPopulations(ctx, req.(*GetPopulationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetObservations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObservationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetObservations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetObservations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetObservations(ctx, req.(*GetObservationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPlacesIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlacesInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPlacesIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPlacesIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPlacesIn(ctx, req.(*GetPlacesInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPlacesInPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlacesInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPlacesInPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPlacesInPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPlacesInPost(ctx, req.(*GetPlacesInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPopObs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPopObsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPopObs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPopObs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPopObs(ctx, req.(*GetPopObsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPlaceObs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlaceObsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPlaceObs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPlaceObs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPlaceObs(ctx, req.(*GetPlaceObsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetObsSeries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObsSeriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetObsSeries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetObsSeries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetObsSeries(ctx, req.(*GetObsSeriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetStats(ctx, req.(*GetStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPopCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPopCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPopCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPopCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPopCategory(ctx, req.(*GetPopCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetRelatedPlaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelatedPlacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetRelatedPlaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetRelatedPlaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetRelatedPlaces(ctx, req.(*GetRelatedPlacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetInterestingPlaceAspects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInterestingPlaceAspectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetInterestingPlaceAspects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetInterestingPlaceAspects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetInterestingPlaceAspects(ctx, req.(*GetInterestingPlaceAspectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetChartData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChartDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetChartData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetChartData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetChartData(ctx, req.(*GetChartDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_Translate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranslateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).Translate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/Translate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).Translate(ctx, req.(*TranslateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mixer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datacommons.Mixer",
	HandlerType: (*MixerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _Mixer_Query_Handler,
		},
		{
			MethodName: "QueryPost",
			Handler:    _Mixer_QueryPost_Handler,
		},
		{
			MethodName: "GetPropertyLabels",
			Handler:    _Mixer_GetPropertyLabels_Handler,
		},
		{
			MethodName: "GetPropertyLabelsPost",
			Handler:    _Mixer_GetPropertyLabelsPost_Handler,
		},
		{
			MethodName: "GetPropertyValues",
			Handler:    _Mixer_GetPropertyValues_Handler,
		},
		{
			MethodName: "GetPropertyValuesPost",
			Handler:    _Mixer_GetPropertyValuesPost_Handler,
		},
		{
			MethodName: "GetTriples",
			Handler:    _Mixer_GetTriples_Handler,
		},
		{
			MethodName: "GetTriplesPost",
			Handler:    _Mixer_GetTriplesPost_Handler,
		},
		{
			MethodName: "GetPopulations",
			Handler:    _Mixer_GetPopulations_Handler,
		},
		{
			MethodName: "GetObservations",
			Handler:    _Mixer_GetObservations_Handler,
		},
		{
			MethodName: "GetPlacesIn",
			Handler:    _Mixer_GetPlacesIn_Handler,
		},
		{
			MethodName: "GetPlacesInPost",
			Handler:    _Mixer_GetPlacesInPost_Handler,
		},
		{
			MethodName: "GetPopObs",
			Handler:    _Mixer_GetPopObs_Handler,
		},
		{
			MethodName: "GetPlaceObs",
			Handler:    _Mixer_GetPlaceObs_Handler,
		},
		{
			MethodName: "GetObsSeries",
			Handler:    _Mixer_GetObsSeries_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _Mixer_GetStats_Handler,
		},
		{
			MethodName: "GetPopCategory",
			Handler:    _Mixer_GetPopCategory_Handler,
		},
		{
			MethodName: "GetRelatedPlaces",
			Handler:    _Mixer_GetRelatedPlaces_Handler,
		},
		{
			MethodName: "GetInterestingPlaceAspects",
			Handler:    _Mixer_GetInterestingPlaceAspects_Handler,
		},
		{
			MethodName: "GetChartData",
			Handler:    _Mixer_GetChartData_Handler,
		},
		{
			MethodName: "Translate",
			Handler:    _Mixer_Translate_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Mixer_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mixer.proto",
}
